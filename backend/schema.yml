openapi: 3.0.3
info:
  title: ChurchConnect API
  version: 1.0.0
  description: Church Management System API
paths:
  /api/v1/auth/admin/users/:
    get:
      operationId: auth_admin_users_list
      description: Enhanced admin user management with filtering and bulk operations
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          enum:
          - admin
          - readonly
          - super_admin
        description: |-
          User's role determining access permissions

          * `super_admin` - Super Administrator
          * `admin` - Administrator
          * `readonly` - Read Only User
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminUserListList'
          description: ''
    post:
      operationId: auth_admin_users_create
      description: Enhanced admin user management with filtering and bulk operations
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/v1/auth/admin/users/{id}/:
    get:
      operationId: auth_admin_users_retrieve
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: auth_admin_users_update
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: auth_admin_users_partial_update
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: auth_admin_users_destroy
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/admin/users/{id}/lock/:
    post:
      operationId: auth_admin_users_lock_create
      description: Lock a user account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/admin/users/{id}/unlock/:
    post:
      operationId: auth_admin_users_unlock_create
      description: Unlock a user account
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/admin/users/bulk-action/:
    post:
      operationId: auth_admin_users_bulk_action_create
      description: Perform bulk actions on admin users
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/auth/login/:
    post:
      operationId: auth_auth_login_create
      description: Enhanced login with security monitoring and rate limiting
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/auth/auth/logout/:
    post:
      operationId: auth_auth_logout_create
      description: Logout with token blacklisting and audit logging
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/auth/refresh/:
    post:
      operationId: auth_auth_refresh_create
      description: Override to add security logging
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/auth/token/refresh/:
    post:
      operationId: auth_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/auth/verify/:
    get:
      operationId: auth_auth_verify_retrieve
      description: Verify token and return comprehensive user data
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/change-password/:
    post:
      operationId: auth_change_password_create
      description: Change password with enhanced security logging
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: Enhanced login with security monitoring and rate limiting
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/auth/login-attempts/:
    get:
      operationId: auth_login_attempts_list
      description: Enhanced login attempts monitoring with filtering
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: success
        schema:
          type: boolean
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoginAttemptList'
          description: ''
  /api/v1/auth/login-attempts/clear/:
    post:
      operationId: auth_login_attempts_clear_create
      description: Clear old login attempts with configurable retention
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout_create
      description: Logout with token blacklisting and audit logging
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/password-reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: Confirm password reset with enhanced security
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/auth/password-reset/request/:
    post:
      operationId: auth_password_reset_request_create
      description: Request password reset with enhanced security measures
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/v1/auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: Change password with enhanced security logging
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/password/force-reset/{user_id}/:
    post:
      operationId: auth_password_force_reset_create
      description: Force password reset for a user
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create_2
      description: Confirm password reset with enhanced security
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/auth/password/reset/request/:
    post:
      operationId: auth_password_reset_request_create_2
      description: Request password reset with enhanced security measures
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/v1/auth/permissions/:
    get:
      operationId: auth_permissions_retrieve
      description: Get comprehensive user permissions and capabilities
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/profile/:
    get:
      operationId: auth_profile_retrieve
      description: Enhanced user profile view with change tracking
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: auth_profile_update
      description: Enhanced user profile view with change tracking
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: auth_profile_partial_update
      description: Enhanced user profile view with change tracking
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/v1/auth/profile/permissions/:
    get:
      operationId: auth_profile_permissions_retrieve
      description: Get comprehensive user permissions and capabilities
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/profile/stats/:
    get:
      operationId: auth_profile_stats_retrieve
      description: Get comprehensive user permissions and capabilities
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/security/:
    get:
      operationId: auth_security_retrieve
      description: Get security dashboard data
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/security/audit-log/:
    get:
      operationId: auth_security_audit_log_retrieve
      description: Get audit log entries with filtering
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/security/compliance-report/:
    get:
      operationId: auth_security_compliance_report_retrieve
      description: Generate compliance report
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/security/login-attempts/:
    get:
      operationId: auth_security_login_attempts_list
      description: Enhanced login attempts monitoring with filtering
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: success
        schema:
          type: boolean
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoginAttemptList'
          description: ''
  /api/v1/auth/security/login-attempts/clear/:
    post:
      operationId: auth_security_login_attempts_clear_create
      description: Clear old login attempts with configurable retention
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/system/health/:
    get:
      operationId: auth_system_health_retrieve
      description: Basic health check
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/system/stats/:
    get:
      operationId: auth_system_stats_retrieve
      description: Get comprehensive system statistics
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/system/test/:
    get:
      operationId: auth_system_test_retrieve
      description: Comprehensive API test endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_system_test_create
      description: Test POST endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/test/:
    get:
      operationId: auth_test_retrieve
      description: Comprehensive API test endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_test_create
      description: Test POST endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/users/:
    get:
      operationId: auth_users_list
      description: Enhanced admin user management with filtering and bulk operations
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          enum:
          - admin
          - readonly
          - super_admin
        description: |-
          User's role determining access permissions

          * `super_admin` - Super Administrator
          * `admin` - Administrator
          * `readonly` - Read Only User
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminUserListList'
          description: ''
    post:
      operationId: auth_users_create
      description: Enhanced admin user management with filtering and bulk operations
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: auth_users_update
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: auth_users_partial_update
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUserRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: auth_users_destroy
      description: Enhanced admin user detail view with change tracking
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/verify/:
    get:
      operationId: auth_verify_retrieve
      description: Verify token and return comprehensive user data
      tags:
      - auth
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/core/dashboard/alerts/:
    get:
      operationId: core_dashboard_alerts_retrieve
      description: Dashboard alerts endpoint with safe model access.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/core/dashboard/config/{user_id}/:
    get:
      operationId: core_dashboard_config_retrieve
      description: Dashboard configuration endpoint with validation and security.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: core_dashboard_config_create
      description: Dashboard configuration endpoint with validation and security.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/core/dashboard/health/:
    get:
      operationId: core_dashboard_health_retrieve
      description: Dashboard health endpoint with comprehensive system status.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/core/dashboard/overview/:
    get:
      operationId: core_dashboard_overview_retrieve
      description: Dashboard overview endpoint with safe model access and comprehensive
        error handling.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/core/dashboard/stats/:
    get:
      operationId: core_dashboard_stats_retrieve
      description: Lightweight dashboard statistics endpoint for real-time widgets.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/core/health/:
    get:
      operationId: core_health_retrieve
      description: |-
        Health check endpoint for monitoring systems.
        Returns basic system health information without model dependencies.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/core/status/:
    get:
      operationId: core_status_retrieve
      description: Detailed system status information with safe model access.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/core/version/:
    get:
      operationId: core_version_retrieve
      description: API version information.
      tags:
      - core
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/events/categories/:
    get:
      operationId: events_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventCategoryList'
          description: ''
    post:
      operationId: events_categories_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
          description: ''
  /api/v1/events/categories/{id}/:
    get:
      operationId: events_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
          description: ''
    put:
      operationId: events_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
          description: ''
    patch:
      operationId: events_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventCategoryRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
          description: ''
    delete:
      operationId: events_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/events/:
    get:
      operationId: events_events_list
      description: List events with logging
      parameters:
      - in: query
        name: end_datetime__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: end_datetime__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: event_type
        schema:
          type: string
          enum:
          - baptism
          - bible_study
          - conference
          - fundraiser
          - funeral
          - kids
          - meeting
          - other
          - outreach
          - prayer
          - retreat
          - seniors
          - service
          - social
          - wedding
          - workshop
          - youth
        description: |-
          * `service` - Church Service
          * `workshop` - Workshop
          * `meeting` - Meeting
          * `social` - Social Event
          * `outreach` - Outreach
          * `conference` - Conference
          * `retreat` - Retreat
          * `fundraiser` - Fundraiser
          * `youth` - Youth Event
          * `kids` - Kids Event
          * `seniors` - Seniors Event
          * `prayer` - Prayer Meeting
          * `bible_study` - Bible Study
          * `baptism` - Baptism
          * `wedding` - Wedding
          * `funeral` - Memorial Service
          * `other` - Other
      - in: query
        name: is_featured
        schema:
          type: boolean
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: requires_registration
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_datetime__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: start_datetime__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - draft
          - postponed
          - published
        description: |-
          * `draft` - Draft
          * `published` - Published
          * `cancelled` - Cancelled
          * `completed` - Completed
          * `postponed` - Postponed
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
    post:
      operationId: events_events_create
      description: ViewSet for managing events with PUBLIC ACCESS for published events
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
  /api/v1/events/events/{id}/:
    get:
      operationId: events_events_retrieve
      description: ViewSet for managing events with PUBLIC ACCESS for published events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_events_update
      description: ViewSet for managing events with PUBLIC ACCESS for published events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
    patch:
      operationId: events_events_partial_update
      description: ViewSet for managing events with PUBLIC ACCESS for published events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
    delete:
      operationId: events_events_destroy
      description: ViewSet for managing events with PUBLIC ACCESS for published events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/events/{id}/duplicate/:
    post:
      operationId: events_events_duplicate_create
      description: Duplicate event - authenticated users only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/events/{id}/register/:
    post:
      operationId: events_events_register_create
      description: Register a member for an event - requires authentication
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/events/{id}/registrations/:
    get:
      operationId: events_events_registrations_retrieve
      description: Get registrations - authenticated users only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/events/{id}/volunteers/:
    get:
      operationId: events_events_volunteers_retrieve
      description: Get volunteers - authenticated users only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/events/bulk_action/:
    post:
      operationId: events_events_bulk_action_create
      description: Bulk actions - authenticated users only
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/events/calendar/:
    get:
      operationId: events_events_calendar_retrieve
      description: 'FIXED: Public calendar endpoint - no authentication required'
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCalendar'
          description: ''
  /api/v1/events/events/export/:
    get:
      operationId: events_events_export_retrieve
      description: Export events - authenticated users only
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventExport'
          description: ''
  /api/v1/events/events/statistics/:
    get:
      operationId: events_events_statistics_retrieve
      description: |-
        FIXED: Get event statistics with proper response structure
        Public endpoint - no authentication required
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/events/upcoming/:
    get:
      operationId: events_events_upcoming_retrieve
      description: 'FIXED: Public upcoming events - no authentication required'
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/registrations/:
    get:
      operationId: events_registrations_list
      parameters:
      - in: query
        name: event
        schema:
          type: string
          format: uuid
      - in: query
        name: member
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: payment_status
        schema:
          type: string
          enum:
          - failed
          - not_required
          - paid
          - partial
          - pending
          - refunded
        description: |-
          * `not_required` - Not Required
          * `pending` - Payment Pending
          * `paid` - Paid
          * `partial` - Partially Paid
          * `refunded` - Refunded
          * `failed` - Payment Failed
      - in: query
        name: registration_date__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: registration_date__lte
        schema:
          type: string
          format: date-time
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - attended
          - cancelled
          - confirmed
          - no_show
          - pending
          - refunded
          - waitlist
        description: |-
          * `pending` - Pending Approval
          * `confirmed` - Confirmed
          * `cancelled` - Cancelled
          * `waitlist` - Waitlisted
          * `attended` - Attended
          * `no_show` - No Show
          * `refunded` - Refunded
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventRegistrationList'
          description: ''
    post:
      operationId: events_registrations_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
  /api/v1/events/registrations/{id}/:
    get:
      operationId: events_registrations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    put:
      operationId: events_registrations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    patch:
      operationId: events_registrations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventRegistrationRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    delete:
      operationId: events_registrations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/registrations/{id}/cancel/:
    post:
      operationId: events_registrations_cancel_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
  /api/v1/events/registrations/{id}/confirm/:
    post:
      operationId: events_registrations_confirm_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
  /api/v1/events/registrations/{id}/mark_attended/:
    post:
      operationId: events_registrations_mark_attended_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
  /api/v1/events/registrations/export/:
    get:
      operationId: events_registrations_export_retrieve
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
  /api/v1/events/reminders/:
    get:
      operationId: events_reminders_list
      parameters:
      - in: query
        name: event
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: reminder_method
        schema:
          type: string
          enum:
          - both
          - email
          - push
          - sms
        description: |-
          * `email` - Email
          * `sms` - SMS
          * `both` - Email and SMS
          * `push` - Push Notification
      - in: query
        name: reminder_type
        schema:
          type: string
          enum:
          - automatic
          - follow_up
          - manual
        description: |-
          * `automatic` - Automatic
          * `manual` - Manual
          * `follow_up` - Follow-up
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: sent
        schema:
          type: boolean
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventReminderList'
          description: ''
    post:
      operationId: events_reminders_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventReminderRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventReminder'
          description: ''
  /api/v1/events/reminders/{id}/:
    get:
      operationId: events_reminders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event reminder.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventReminder'
          description: ''
    put:
      operationId: events_reminders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event reminder.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventReminderRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventReminder'
          description: ''
    patch:
      operationId: events_reminders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event reminder.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventReminderRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventReminder'
          description: ''
    delete:
      operationId: events_reminders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event reminder.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/volunteers/:
    get:
      operationId: events_volunteers_list
      parameters:
      - in: query
        name: event
        schema:
          type: string
          format: uuid
      - in: query
        name: member
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          enum:
          - catering
          - childcare
          - cleanup
          - coordinator
          - other
          - photographer
          - registration
          - security
          - setup
          - tech
          - usher
        description: |-
          * `coordinator` - Event Coordinator
          * `setup` - Setup Crew
          * `registration` - Registration Desk
          * `usher` - Usher
          * `security` - Security
          * `tech` - Technical Support
          * `catering` - Catering/Food Service
          * `childcare` - Childcare
          * `cleanup` - Cleanup Crew
          * `photographer` - Photographer
          * `other` - Other
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - completed
          - confirmed
          - declined
          - invited
          - no_show
        description: |-
          * `invited` - Invited
          * `confirmed` - Confirmed
          * `declined` - Declined
          * `completed` - Completed
          * `no_show` - No Show
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventVolunteerList'
          description: ''
    post:
      operationId: events_volunteers_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventVolunteerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventVolunteerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventVolunteerRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventVolunteer'
          description: ''
  /api/v1/events/volunteers/{id}/:
    get:
      operationId: events_volunteers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event volunteer.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventVolunteer'
          description: ''
    put:
      operationId: events_volunteers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event volunteer.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventVolunteerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventVolunteerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventVolunteerRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventVolunteer'
          description: ''
    patch:
      operationId: events_volunteers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event volunteer.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventVolunteerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventVolunteerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventVolunteerRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventVolunteer'
          description: ''
    delete:
      operationId: events_volunteers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event volunteer.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/families/:
    get:
      operationId: families_list
      description: Enhanced ViewSet for managing families with rate limiting removed
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: primary_contact
        schema:
          type: string
          format: uuid
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__lte
        schema:
          type: string
          format: date-time
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFamilySummaryList'
          description: ''
    post:
      operationId: families_create
      description: Enhanced ViewSet for managing families with rate limiting removed
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateFamilyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFamilyRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFamily'
          description: ''
  /api/v1/families/{id}/:
    get:
      operationId: families_retrieve
      description: Enhanced ViewSet for managing families with rate limiting removed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
    put:
      operationId: families_update
      description: Enhanced ViewSet for managing families with rate limiting removed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
    patch:
      operationId: families_partial_update
      description: Enhanced ViewSet for managing families with rate limiting removed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFamilyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFamilyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFamilyRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
    delete:
      operationId: families_destroy
      description: Enhanced destroy with proper cleanup
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/families/{id}/add-member/:
    post:
      operationId: families_add_member_create
      description: Add member to family with enhanced error handling
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemberToFamilyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddMemberToFamilyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddMemberToFamilyRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemberToFamily'
          description: ''
  /api/v1/families/{id}/remove-member/{member_id}/:
    delete:
      operationId: families_remove_member_destroy
      description: Remove member from family
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      - in: path
        name: member_id
        schema:
          type: string
        required: true
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/families/{id}/set_primary_contact/:
    post:
      operationId: families_set_primary_contact_create
      description: Set or change the primary contact for a family
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family.
        required: true
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
  /api/v1/families/bulk_operations/:
    post:
      operationId: families_bulk_operations_create
      description: Perform bulk operations on families
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FamilyRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
  /api/v1/families/relationships/:
    get:
      operationId: families_relationships_list
      description: ViewSet for managing family relationships directly
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: family
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: relationship_type
        schema:
          type: string
          enum:
          - child
          - dependent
          - head
          - other
          - spouse
        description: |-
          Type of relationship to the family

          * `head` - Head of Household
          * `spouse` - Spouse
          * `child` - Child
          * `dependent` - Dependent
          * `other` - Other
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFamilyRelationshipList'
          description: ''
    post:
      operationId: families_relationships_create
      description: ViewSet for managing family relationships directly
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FamilyRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FamilyRelationshipRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRelationship'
          description: ''
  /api/v1/families/relationships/{id}/:
    get:
      operationId: families_relationships_retrieve
      description: ViewSet for managing family relationships directly
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family Relationship.
        required: true
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRelationship'
          description: ''
    put:
      operationId: families_relationships_update
      description: ViewSet for managing family relationships directly
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family Relationship.
        required: true
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FamilyRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FamilyRelationshipRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRelationship'
          description: ''
    patch:
      operationId: families_relationships_partial_update
      description: ViewSet for managing family relationships directly
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family Relationship.
        required: true
      tags:
      - families
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFamilyRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFamilyRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFamilyRelationshipRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRelationship'
          description: ''
    delete:
      operationId: families_relationships_destroy
      description: ViewSet for managing family relationships directly
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Family Relationship.
        required: true
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/families/statistics/:
    get:
      operationId: families_statistics_retrieve
      description: Get comprehensive family statistics - NO RATE LIMITING
      tags:
      - families
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
  /api/v1/groups/:
    get:
      operationId: groups_list
      parameters:
      - in: query
        name: categories__category
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_public
        schema:
          type: boolean
      - in: query
        name: leader
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: requires_approval
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupSummaryList'
          description: ''
    post:
      operationId: groups_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/:
    get:
      operationId: groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/groups/{id}/approve-member/{member_id}/:
    post:
      operationId: groups_approve_member_create
      description: Approve a pending member
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      - in: path
        name: member_id
        schema:
          type: string
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/decline-member/{member_id}/:
    post:
      operationId: groups_decline_member_create
      description: Decline a pending member
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      - in: path
        name: member_id
        schema:
          type: string
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/export/:
    get:
      operationId: groups_export_retrieve
      description: Export group member data
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/join/:
    post:
      operationId: groups_join_create
      description: Add a member to a group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/members/:
    get:
      operationId: groups_members_retrieve
      description: Get all members of a group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/remove-member/{member_id}/:
    post:
      operationId: groups_remove_member_create
      description: Remove a member from a group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      - in: path
        name: member_id
        schema:
          type: string
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/update-membership/{member_id}/:
    patch:
      operationId: groups_update_membership_partial_update
      description: Update a member's role or status in a group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      - in: path
        name: member_id
        schema:
          type: string
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/categories/:
    get:
      operationId: groups_categories_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupCategoryList'
          description: ''
    post:
      operationId: groups_categories_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCategory'
          description: ''
  /api/v1/groups/categories/{id}/:
    get:
      operationId: groups_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group category.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCategory'
          description: ''
    put:
      operationId: groups_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group category.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCategory'
          description: ''
    patch:
      operationId: groups_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group category.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupCategoryRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCategory'
          description: ''
    delete:
      operationId: groups_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group category.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/groups/categories/{id}/groups/:
    get:
      operationId: groups_categories_groups_retrieve
      description: Get all groups in this category
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group category.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCategory'
          description: ''
  /api/v1/groups/categories/with_counts/:
    get:
      operationId: groups_categories_with_counts_retrieve
      description: Get categories with group counts
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCategory'
          description: ''
  /api/v1/groups/memberships/:
    get:
      operationId: groups_memberships_list
      parameters:
      - in: query
        name: group
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: member
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          enum:
          - assistant
          - co_leader
          - leader
          - member
        description: |-
          * `member` - Member
          * `leader` - Leader
          * `co_leader` - Co-Leader
          * `assistant` - Assistant
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - declined
          - inactive
          - pending
        description: |-
          * `active` - Active
          * `inactive` - Inactive
          * `pending` - Pending Approval
          * `declined` - Declined
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMemberGroupRelationshipList'
          description: ''
    post:
      operationId: groups_memberships_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
  /api/v1/groups/memberships/{id}/:
    get:
      operationId: groups_memberships_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Group Membership.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
    put:
      operationId: groups_memberships_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Group Membership.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
    patch:
      operationId: groups_memberships_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Group Membership.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMemberGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMemberGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMemberGroupRelationshipRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
    delete:
      operationId: groups_memberships_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Group Membership.
        required: true
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/groups/memberships/{id}/activate/:
    post:
      operationId: groups_memberships_activate_create
      description: Activate a membership
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Group Membership.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
  /api/v1/groups/memberships/{id}/deactivate/:
    post:
      operationId: groups_memberships_deactivate_create
      description: Deactivate a membership
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Group Membership.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberGroupRelationshipRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
  /api/v1/groups/memberships/pending/:
    get:
      operationId: groups_memberships_pending_retrieve
      description: Get all pending memberships
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
  /api/v1/groups/memberships/statistics/:
    get:
      operationId: groups_memberships_statistics_retrieve
      description: Get membership statistics
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupRelationship'
          description: ''
  /api/v1/groups/public/:
    get:
      operationId: groups_public_retrieve
      description: Get public groups available for joining
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSummary'
          description: ''
  /api/v1/groups/statistics/:
    get:
      operationId: groups_statistics_retrieve
      description: Get comprehensive group statistics - COMPLETELY FIXED
      tags:
      - groups
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSummary'
          description: ''
  /api/v1/members/:
    get:
      operationId: members_list
      description: |-
        List members with enhanced pagination info and comprehensive count fields
        FIXED: Returns all count variations for maximum frontend compatibility
      parameters:
      - in: query
        name: family
        schema:
          type: string
          format: uuid
      - in: query
        name: family__isnull
        schema:
          type: boolean
      - in: query
        name: gender
        schema:
          type: string
          nullable: true
          enum:
          - female
          - male
          - other
          - prefer_not_to_say
        description: |-
          * `male` - Male
          * `female` - Female
          * `other` - Other
          * `prefer_not_to_say` - Prefer not to say
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: registration_date
        schema:
          type: string
          format: date-time
      - in: query
        name: registration_date__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: registration_date__lte
        schema:
          type: string
          format: date-time
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMemberSummaryList'
          description: ''
    post:
      operationId: members_create
      description: Create member with admin validation and phone processing
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberCreate'
          description: ''
  /api/v1/members/{id}/:
    get:
      operationId: members_retrieve
      description: Complete Members ViewSet with all endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
    put:
      operationId: members_update
      description: Complete Members ViewSet with all endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberUpdate'
          description: ''
    patch:
      operationId: members_partial_update
      description: Complete Members ViewSet with all endpoints
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMemberUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMemberUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMemberUpdateRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberUpdate'
          description: ''
    delete:
      operationId: members_destroy
      description: Delete member with admin check
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/members/{id}/activity/:
    get:
      operationId: members_activity_retrieve
      description: Get member activity history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/{id}/family/:
    get:
      operationId: members_family_retrieve
      description: Get family members
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/{id}/groups/:
    get:
      operationId: members_groups_retrieve
      description: Get groups/ministries the member belongs to
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/birthdays/:
    get:
      operationId: members_birthdays_retrieve
      description: Get members with upcoming birthdays
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/bulk_actions/:
    post:
      operationId: members_bulk_actions_create
      description: Handle bulk actions on multiple members
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/bulk_import/:
    post:
      operationId: members_bulk_import_create
      description: Bulk import with detailed error reporting
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/members/export/:
    get:
      operationId: members_export_retrieve
      description: Export members to CSV - Admin only
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberExport'
          description: ''
  /api/v1/members/import-logs/:
    get:
      operationId: members_import_logs_list
      description: ViewSet for viewing bulk import logs - Admin only
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBulkImportLogList'
          description: ''
  /api/v1/members/import-logs/{id}/:
    get:
      operationId: members_import_logs_retrieve
      description: ViewSet for viewing bulk import logs - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkImportLog'
          description: ''
  /api/v1/members/notes/:
    get:
      operationId: members_notes_list
      description: ViewSet for managing member notes - Admin only
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMemberNoteList'
          description: ''
    post:
      operationId: members_notes_create
      description: ViewSet for managing member notes - Admin only
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberNoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberNoteRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNote'
          description: ''
  /api/v1/members/notes/{id}/:
    get:
      operationId: members_notes_retrieve
      description: ViewSet for managing member notes - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Note.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNote'
          description: ''
    put:
      operationId: members_notes_update
      description: ViewSet for managing member notes - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Note.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberNoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberNoteRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNote'
          description: ''
    patch:
      operationId: members_notes_partial_update
      description: ViewSet for managing member notes - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Note.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMemberNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMemberNoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMemberNoteRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberNote'
          description: ''
    delete:
      operationId: members_notes_destroy
      description: ViewSet for managing member notes - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Note.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/members/recent/:
    get:
      operationId: members_recent_retrieve
      description: Get recently registered members - FIXED RESPONSE FORMAT
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/register/:
    post:
      operationId: members_register_create
      description: Public member registration endpoint with enhanced phone processing
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/members/search/:
    get:
      operationId: members_search_retrieve
      description: Search members by query - ENHANCED
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/statistics/:
    get:
      operationId: members_statistics_retrieve
      description: |-
        Get comprehensive member statistics
        FIXED: Returns counts at BOTH root level AND nested summary level
        for compatibility with different frontend code paths
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/v1/members/statistics/{id}/:
    get:
      operationId: members_statistics_retrieve_2
      description: ViewSet for member statistics - Authenticated users only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/members/tags/:
    get:
      operationId: members_tags_list
      description: ViewSet for managing member tags - Admin only
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMemberTagList'
          description: ''
    post:
      operationId: members_tags_create
      description: ViewSet for managing member tags - Admin only
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberTagRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberTag'
          description: ''
  /api/v1/members/tags/{id}/:
    get:
      operationId: members_tags_retrieve
      description: ViewSet for managing member tags - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Tag.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberTag'
          description: ''
    put:
      operationId: members_tags_update
      description: ViewSet for managing member tags - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Tag.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemberTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemberTagRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberTag'
          description: ''
    patch:
      operationId: members_tags_partial_update
      description: ViewSet for managing member tags - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Tag.
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMemberTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMemberTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMemberTagRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberTag'
          description: ''
    delete:
      operationId: members_tags_destroy
      description: ViewSet for managing member tags - Admin only
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Member Tag.
        required: true
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/members/template/:
    get:
      operationId: members_template_retrieve
      description: Download CSV template with proper headers - UPDATED
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/members/test-db/:
    get:
      operationId: members_test_db_retrieve
      description: Test database connectivity and return system status
      tags:
      - members
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/pledges/:
    get:
      operationId: pledges_list
      description: ViewSet for managing pledges - Complete with all actions including
        recent
      parameters:
      - in: query
        name: frequency
        schema:
          type: string
          enum:
          - annually
          - monthly
          - one-time
          - quarterly
          - weekly
        description: |-
          How often the pledge is made

          * `one-time` - One Time
          * `weekly` - Weekly
          * `monthly` - Monthly
          * `quarterly` - Quarterly
          * `annually` - Annually
      - in: query
        name: member
        schema:
          type: string
          format: uuid
      - in: query
        name: member__gender
        schema:
          type: string
          nullable: true
          enum:
          - female
          - male
          - other
          - prefer_not_to_say
        description: |-
          * `male` - Male
          * `female` - Female
          * `other` - Other
          * `prefer_not_to_say` - Prefer not to say
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - cancelled
          - completed
          - paused
        description: |-
          Current status of the pledge

          * `active` - Active
          * `completed` - Completed
          * `cancelled` - Cancelled
          * `paused` - Paused
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPledgeListList'
          description: ''
    post:
      operationId: pledges_create
      description: Enhanced create with better response formatting
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeCreateUpdate'
          description: ''
  /api/v1/pledges/{id}/:
    get:
      operationId: pledges_retrieve
      description: ViewSet for managing pledges - Complete with all actions including
        recent
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
    put:
      operationId: pledges_update
      description: Enhanced update with better response formatting
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeCreateUpdate'
          description: ''
    patch:
      operationId: pledges_partial_update
      description: ViewSet for managing pledges - Complete with all actions including
        recent
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPledgeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPledgeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPledgeCreateUpdateRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeCreateUpdate'
          description: ''
    delete:
      operationId: pledges_destroy
      description: Enhanced delete with better response formatting
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/pledges/{id}/add_payment/:
    post:
      operationId: pledges_add_payment_create
      description: Add a payment to a specific pledge
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/{id}/payment_history/:
    get:
      operationId: pledges_payment_history_retrieve
      description: Get payment history for a specific pledge
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/bulk-action/:
    post:
      operationId: pledges_bulk_action_create
      description: Perform bulk actions on multiple pledges
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/bulk-delete/:
    post:
      operationId: pledges_bulk_delete_create
      description: Bulk delete multiple pledges
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/bulk-update/:
    post:
      operationId: pledges_bulk_update_create
      description: Bulk update multiple pledges
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/bulk_action/:
    post:
      operationId: pledges_bulk_action_create_2
      description: Perform bulk actions on multiple pledges
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/bulk_delete/:
    post:
      operationId: pledges_bulk_delete_create_2
      description: Bulk delete multiple pledges
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/bulk_update/:
    post:
      operationId: pledges_bulk_update_create_2
      description: Bulk update multiple pledges
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/export/:
    get:
      operationId: pledges_export_retrieve
      description: Export pledges to CSV with comprehensive data
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/export_csv/:
    get:
      operationId: pledges_export_csv_retrieve
      description: Export pledges to CSV with comprehensive data
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/overdue/:
    get:
      operationId: pledges_overdue_retrieve
      description: Get overdue pledges
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/payments/:
    get:
      operationId: pledges_payments_list
      description: ViewSet for managing pledge payments - FIXED related_name
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: payment_method
        schema:
          type: string
          enum:
          - bank_transfer
          - card
          - cash
          - check
          - mobile
          - online
          - other
        description: |-
          * `cash` - Cash
          * `check` - Check
          * `card` - Credit/Debit Card
          * `bank_transfer` - Bank Transfer
          * `online` - Online Payment
          * `mobile` - Mobile Payment
          * `other` - Other
      - in: query
        name: pledge
        schema:
          type: string
          format: uuid
      - in: query
        name: pledge__member
        schema:
          type: string
          format: uuid
      - in: query
        name: pledge__status
        schema:
          type: string
          enum:
          - active
          - cancelled
          - completed
          - paused
        description: |-
          Current status of the pledge

          * `active` - Active
          * `completed` - Completed
          * `cancelled` - Cancelled
          * `paused` - Paused
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPledgePaymentList'
          description: ''
    post:
      operationId: pledges_payments_create
      description: ViewSet for managing pledge payments - FIXED related_name
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgePayment'
          description: ''
  /api/v1/pledges/payments/{id}/:
    get:
      operationId: pledges_payments_retrieve
      description: ViewSet for managing pledge payments - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Payment.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgePayment'
          description: ''
    put:
      operationId: pledges_payments_update
      description: ViewSet for managing pledge payments - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Payment.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgePayment'
          description: ''
    patch:
      operationId: pledges_payments_partial_update
      description: ViewSet for managing pledge payments - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Payment.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPledgePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPledgePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPledgePaymentRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgePayment'
          description: ''
    delete:
      operationId: pledges_payments_destroy
      description: ViewSet for managing pledge payments - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Payment.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/pledges/payments/recent/:
    get:
      operationId: pledges_payments_recent_retrieve
      description: Get recent payments
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgePayment'
          description: ''
  /api/v1/pledges/payments/statistics/:
    get:
      operationId: pledges_payments_statistics_retrieve
      description: Get payment statistics
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgePayment'
          description: ''
  /api/v1/pledges/recent/:
    get:
      operationId: pledges_recent_retrieve
      description: Get recently created pledges
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/reminders/:
    get:
      operationId: pledges_reminders_list
      description: ViewSet for managing pledge reminders - FIXED related_name
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: pledge
        schema:
          type: string
          format: uuid
      - in: query
        name: reminder_method
        schema:
          type: string
          enum:
          - email
          - mail
          - phone
          - sms
        description: |-
          * `email` - Email
          * `sms` - SMS
          * `phone` - Phone Call
          * `mail` - Physical Mail
      - in: query
        name: reminder_type
        schema:
          type: string
          enum:
          - completion
          - overdue
          - thank_you
          - upcoming
        description: |-
          * `upcoming` - Upcoming Payment
          * `overdue` - Overdue Payment
          * `thank_you` - Thank You
          * `completion` - Pledge Completion
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPledgeReminderList'
          description: ''
    post:
      operationId: pledges_reminders_create
      description: ViewSet for managing pledge reminders - FIXED related_name
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
  /api/v1/pledges/reminders/{id}/:
    get:
      operationId: pledges_reminders_retrieve
      description: ViewSet for managing pledge reminders - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Reminder.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
    put:
      operationId: pledges_reminders_update
      description: ViewSet for managing pledge reminders - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Reminder.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
    patch:
      operationId: pledges_reminders_partial_update
      description: ViewSet for managing pledge reminders - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Reminder.
        required: true
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPledgeReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPledgeReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPledgeReminderRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
    delete:
      operationId: pledges_reminders_destroy
      description: ViewSet for managing pledge reminders - FIXED related_name
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Pledge Reminder.
        required: true
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/pledges/reminders/bulk_send/:
    post:
      operationId: pledges_reminders_bulk_send_create
      description: Bulk send reminders
      tags:
      - pledges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PledgeReminderRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
  /api/v1/pledges/reminders/statistics/:
    get:
      operationId: pledges_reminders_statistics_retrieve
      description: Get reminder statistics
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
  /api/v1/pledges/reminders/upcoming/:
    get:
      operationId: pledges_reminders_upcoming_retrieve
      description: Get upcoming reminders
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeReminder'
          description: ''
  /api/v1/pledges/statistics/:
    get:
      operationId: pledges_statistics_retrieve
      description: Get comprehensive pledge statistics - MAIN STATS ENDPOINT
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/stats/:
    get:
      operationId: pledges_stats_retrieve
      description: Get comprehensive pledge statistics - MAIN STATS ENDPOINT
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/summary-report/:
    get:
      operationId: pledges_summary_report_retrieve
      description: Get member summary report
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/summary_report/:
    get:
      operationId: pledges_summary_report_retrieve_2
      description: Get member summary report
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/trends/:
    get:
      operationId: pledges_trends_retrieve
      description: Get pledge trends over time
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/upcoming-payments/:
    get:
      operationId: pledges_upcoming_payments_retrieve
      description: Get pledges with upcoming payments due
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/pledges/upcoming_payments/:
    get:
      operationId: pledges_upcoming_payments_retrieve_2
      description: Get pledges with upcoming payments due
      tags:
      - pledges
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PledgeDetail'
          description: ''
  /api/v1/reports/:
    get:
      operationId: reports_list
      description: ViewSet for managing reports
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportList'
          description: ''
    post:
      operationId: reports_create
      description: ViewSet for managing reports
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/v1/reports/{id}/:
    get:
      operationId: reports_retrieve
      description: ViewSet for managing reports
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    put:
      operationId: reports_update
      description: ViewSet for managing reports
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    patch:
      operationId: reports_partial_update
      description: ViewSet for managing reports
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    delete:
      operationId: reports_destroy
      description: ViewSet for managing reports
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reports/{id}/run/:
    post:
      operationId: reports_run_create
      description: Run a specific report
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/v1/reports/bulk_action/:
    post:
      operationId: reports_bulk_action_create
      description: Perform bulk actions on reports
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/v1/reports/generate/:
    post:
      operationId: reports_generate_create
      description: Generate a report on-the-fly without saving configuration
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/v1/reports/runs/:
    get:
      operationId: reports_runs_list
      description: ViewSet for viewing report runs
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportRunList'
          description: ''
  /api/v1/reports/runs/{id}/:
    get:
      operationId: reports_runs_retrieve
      description: ViewSet for viewing report runs
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report Run.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRun'
          description: ''
  /api/v1/reports/stats/:
    get:
      operationId: reports_stats_retrieve
      description: Get report statistics
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/v1/reports/templates/:
    get:
      operationId: reports_templates_list
      description: ViewSet for managing report templates
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportTemplateList'
          description: ''
    post:
      operationId: reports_templates_create
      description: ViewSet for managing report templates
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
  /api/v1/reports/templates/{id}/:
    get:
      operationId: reports_templates_retrieve
      description: ViewSet for managing report templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report Template.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
    put:
      operationId: reports_templates_update
      description: ViewSet for managing report templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report Template.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
    patch:
      operationId: reports_templates_partial_update
      description: ViewSet for managing report templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report Template.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReportTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReportTemplateRequest'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
    delete:
      operationId: reports_templates_destroy
      description: ViewSet for managing report templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report Template.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reports/templates/{id}/use_template/:
    post:
      operationId: reports_templates_use_template_create
      description: Create a report from template
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Report Template.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
          description: ''
components:
  schemas:
    AddMemberToFamily:
      type: object
      description: Serializer for adding a member to a family
      properties:
        member_id:
          type: string
          format: uuid
        relationship_type:
          $ref: '#/components/schemas/RelationshipTypeEnum'
        notes:
          type: string
          maxLength: 1000
      required:
      - member_id
      - relationship_type
    AddMemberToFamilyRequest:
      type: object
      description: Serializer for adding a member to a family
      properties:
        member_id:
          type: string
          format: uuid
        relationship_type:
          $ref: '#/components/schemas/RelationshipTypeEnum'
        notes:
          type: string
          maxLength: 1000
      required:
      - member_id
      - relationship_type
    AdminUser:
      type: object
      description: Enhanced admin user serializer with comprehensive validation and
        security
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the user
        username:
          type: string
          description: Unique username (3-30 characters, alphanumeric, underscore,
            hyphen only)
          pattern: ^[a-zA-Z0-9_-]+$
          maxLength: 30
        email:
          type: string
          format: email
          description: User's email address (used for login)
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        last_name:
          type: string
          description: User's last name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        role:
          allOf:
          - $ref: '#/components/schemas/Role85eEnum'
          description: |-
            User's role determining access permissions

            * `super_admin` - Super Administrator
            * `admin` - Administrator
            * `readonly` - Read Only User
        active:
          type: boolean
          description: Whether the user account is active
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_login_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was last updated
        full_name:
          type: string
          readOnly: true
        account_age:
          type: string
          readOnly: true
        is_locked:
          type: string
          readOnly: true
      required:
      - email
      - username
    AdminUserList:
      type: object
      description: Lightweight serializer for listing admin users with essential info
        only
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the user
        username:
          type: string
          description: Unique username (3-30 characters, alphanumeric, underscore,
            hyphen only)
          pattern: ^[a-zA-Z0-9_-]+$
          maxLength: 30
        email:
          type: string
          format: email
          description: User's email address (used for login)
          maxLength: 254
        full_name:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/Role85eEnum'
          description: |-
            User's role determining access permissions

            * `super_admin` - Super Administrator
            * `admin` - Administrator
            * `readonly` - Read Only User
        role_display:
          type: string
          readOnly: true
        active:
          type: boolean
          description: Whether the user account is active
        last_login:
          type: string
          format: date-time
          nullable: true
        last_login_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was created
        status_display:
          type: string
          readOnly: true
      required:
      - email
      - username
    AdminUserRequest:
      type: object
      description: Enhanced admin user serializer with comprehensive validation and
        security
      properties:
        username:
          type: string
          minLength: 1
          description: Unique username (3-30 characters, alphanumeric, underscore,
            hyphen only)
          pattern: ^[a-zA-Z0-9_-]+$
          maxLength: 30
        email:
          type: string
          format: email
          minLength: 1
          description: User's email address (used for login)
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        last_name:
          type: string
          description: User's last name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        role:
          allOf:
          - $ref: '#/components/schemas/Role85eEnum'
          description: |-
            User's role determining access permissions

            * `super_admin` - Super Administrator
            * `admin` - Administrator
            * `readonly` - Read Only User
        active:
          type: boolean
          description: Whether the user account is active
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Password (8+ characters with mixed case, numbers, and symbols)
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
          description: Confirm password
      required:
      - email
      - username
    BlankEnum:
      enum:
      - ''
    BulkImportError:
      type: object
      description: Serializer for bulk import errors
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        row_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        field_name:
          type: string
          nullable: true
          maxLength: 100
        error_message:
          type: string
        row_data: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - error_message
      - row_number
    BulkImportLog:
      type: object
      description: Serializer for bulk import logs
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        batch_id:
          type: string
          format: uuid
        filename:
          type: string
          maxLength: 255
        total_rows:
          type: integer
          maximum: 2147483647
          minimum: 0
        successful_rows:
          type: integer
          maximum: 2147483647
          minimum: 0
        failed_rows:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          $ref: '#/components/schemas/BulkImportLogStatusEnum'
        error_summary:
          type: string
          nullable: true
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        import_errors:
          type: array
          items:
            $ref: '#/components/schemas/BulkImportError'
          readOnly: true
        success_rate:
          type: string
          readOnly: true
      required:
      - filename
    BulkImportLogStatusEnum:
      enum:
      - pending
      - processing
      - completed
      - failed
      - completed_with_errors
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `completed_with_errors` - Completed with Errors
        * `cancelled` - Cancelled
    CreateFamily:
      type: object
      description: Serializer for creating families with initial members
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        family_name:
          type: string
          maxLength: 255
        address:
          type: string
          nullable: true
          description: Family address
        notes:
          type: string
          nullable: true
          description: Additional notes about the family
        primary_contact_id:
          type: string
          format: uuid
          nullable: true
          description: Primary contact for this family
          readOnly: true
      required:
      - family_name
    CreateFamilyRequest:
      type: object
      description: Serializer for creating families with initial members
      properties:
        family_name:
          type: string
          minLength: 1
          maxLength: 255
        address:
          type: string
          nullable: true
          description: Family address
        notes:
          type: string
          nullable: true
          description: Additional notes about the family
        initial_members:
          type: array
          items:
            type: object
            additionalProperties: {}
          writeOnly: true
      required:
      - family_name
    DefaultFormatEnum:
      enum:
      - csv
      - excel
      - pdf
      - json
      type: string
      description: |-
        * `csv` - CSV
        * `excel` - Excel
        * `pdf` - PDF
        * `json` - JSON
    Event:
      type: object
      description: Main event serializer with full details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          description: Full event description
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        event_type_display:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/EventCategory'
          readOnly: true
        location:
          type: string
          description: Event location
          maxLength: 255
        location_details:
          type: string
          description: Additional location information
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Last date/time for registration
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        contact_email:
          type: string
          format: email
          description: Contact email for questions
          maxLength: 254
        contact_phone:
          type: string
          description: Contact phone number
          maxLength: 20
        target_groups:
          type: array
          items:
            $ref: '#/components/schemas/EventGroupSummary'
          readOnly: true
        age_min:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Minimum age requirement
        age_max:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Maximum age requirement
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        status_display:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        is_featured:
          type: boolean
          description: Feature this event prominently
        prerequisites:
          type: string
          description: Requirements, items to bring, or preparation needed
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to event poster or promotional image
          maxLength: 200
        external_registration_url:
          type: string
          format: uri
          nullable: true
          description: External registration link (if using third-party system)
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_modified_by:
          type: string
          readOnly: true
        registration_count:
          type: string
          readOnly: true
        waitlist_count:
          type: string
          readOnly: true
        volunteer_count:
          type: string
          readOnly: true
        available_spots:
          type: string
          readOnly: true
        is_past:
          type: string
          readOnly: true
        is_upcoming:
          type: string
          readOnly: true
        is_today:
          type: string
          readOnly: true
        registration_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        duration_hours:
          type: string
          readOnly: true
      required:
      - end_datetime
      - start_datetime
      - title
    EventCalendar:
      type: object
      description: Minimal serializer for calendar view
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        event_type_display:
          type: string
          readOnly: true
        location:
          type: string
          description: Event location
          maxLength: 255
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        is_featured:
          type: boolean
          description: Feature this event prominently
        color:
          type: string
          readOnly: true
      required:
      - end_datetime
      - start_datetime
      - title
    EventCategory:
      type: object
      description: Serializer for event categories
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        color:
          type: string
          description: Hex color code
          maxLength: 7
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
      required:
      - name
    EventCategoryRequest:
      type: object
      description: Serializer for event categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        color:
          type: string
          minLength: 1
          description: Hex color code
          maxLength: 7
        is_active:
          type: boolean
      required:
      - name
    EventCreateUpdate:
      type: object
      description: Serializer for creating and updating events
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          description: Full event description
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        category_id:
          type: string
          format: uuid
          nullable: true
        location:
          type: string
          description: Event location
          maxLength: 255
        location_details:
          type: string
          description: Additional location information
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Last date/time for registration
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        contact_email:
          type: string
          format: email
          description: Contact email for questions
          maxLength: 254
        contact_phone:
          type: string
          description: Contact phone number
          maxLength: 20
        target_group_ids:
          type: array
          items:
            type: string
            format: uuid
        age_min:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Minimum age requirement
        age_max:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Maximum age requirement
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        is_featured:
          type: boolean
          description: Feature this event prominently
        prerequisites:
          type: string
          description: Requirements, items to bring, or preparation needed
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to event poster or promotional image
          maxLength: 200
        external_registration_url:
          type: string
          format: uri
          nullable: true
          description: External registration link (if using third-party system)
          maxLength: 200
      required:
      - end_datetime
      - start_datetime
      - title
    EventCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating events
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          description: Full event description
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        category_id:
          type: string
          format: uuid
          nullable: true
        location:
          type: string
          description: Event location
          maxLength: 255
        location_details:
          type: string
          description: Additional location information
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Last date/time for registration
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        contact_email:
          type: string
          format: email
          description: Contact email for questions
          maxLength: 254
        contact_phone:
          type: string
          description: Contact phone number
          maxLength: 20
        target_group_ids:
          type: array
          items:
            type: string
            format: uuid
        age_min:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Minimum age requirement
        age_max:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Maximum age requirement
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        is_featured:
          type: boolean
          description: Feature this event prominently
        prerequisites:
          type: string
          description: Requirements, items to bring, or preparation needed
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to event poster or promotional image
          maxLength: 200
        external_registration_url:
          type: string
          format: uri
          nullable: true
          description: External registration link (if using third-party system)
          maxLength: 200
      required:
      - end_datetime
      - start_datetime
      - title
    EventExport:
      type: object
      description: Serializer for exporting events
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        event_type_display:
          type: string
        category_name:
          type: string
          default: ''
        location:
          type: string
          description: Event location
          maxLength: 255
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        status_display:
          type: string
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        registration_count:
          type: string
          readOnly: true
        volunteer_count:
          type: string
          readOnly: true
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        created_at:
          type: string
          format: date-time
      required:
      - end_datetime
      - event_type_display
      - start_datetime
      - status_display
      - title
    EventGroupSummary:
      type: object
      description: Simple group serializer for event contexts
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the group or ministry
          maxLength: 255
          minLength: 2
        description:
          type: string
          nullable: true
          description: Detailed description of the group's purpose and activities
      required:
      - name
    EventGroupSummaryRequest:
      type: object
      description: Simple group serializer for event contexts
      properties:
        name:
          type: string
          minLength: 2
          description: Name of the group or ministry
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Detailed description of the group's purpose and activities
      required:
      - name
    EventList:
      type: object
      description: Simplified serializer for list views
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        event_type_display:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/EventCategory'
          readOnly: true
        location:
          type: string
          description: Event location
          maxLength: 255
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        status_display:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        is_featured:
          type: boolean
          description: Feature this event prominently
        registration_count:
          type: string
          readOnly: true
        volunteer_count:
          type: string
          readOnly: true
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        registration_open:
          type: string
          readOnly: true
        is_upcoming:
          type: string
          readOnly: true
        is_past:
          type: string
          readOnly: true
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to event poster or promotional image
          maxLength: 200
      required:
      - end_datetime
      - start_datetime
      - title
    EventMemberSummary:
      type: object
      description: Simple member serializer for event contexts
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          description: Member's last name
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
      required:
      - email
      - first_name
      - last_name
    EventMemberSummaryRequest:
      type: object
      description: Simple member serializer for event contexts
      properties:
        first_name:
          type: string
          minLength: 1
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Member's last name
          maxLength: 100
        email:
          type: string
          format: email
          minLength: 1
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
      required:
      - email
      - first_name
      - last_name
    EventRegistration:
      type: object
      description: Serializer for event registrations
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        event:
          type: string
          format: uuid
          nullable: true
        member:
          allOf:
          - $ref: '#/components/schemas/EventMemberSummary'
          readOnly: true
        event_title:
          type: string
          readOnly: true
        member_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/EventRegistrationStatusEnum'
        status_display:
          type: string
          readOnly: true
        registration_date:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
          description: Additional notes or comments
        dietary_requirements:
          type: string
          description: Special dietary needs or restrictions
          maxLength: 500
        emergency_contact_name:
          type: string
          maxLength: 200
        emergency_contact_phone:
          type: string
          maxLength: 20
        accessibility_needs:
          type: string
          description: Any accessibility accommodations needed
          maxLength: 500
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_status_display:
          type: string
          readOnly: true
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_reference:
          type: string
          description: Payment reference number or transaction ID
          maxLength: 100
        payment_date:
          type: string
          format: date-time
          nullable: true
        approved_by:
          type: string
          readOnly: true
        approval_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    EventRegistrationRequest:
      type: object
      description: Serializer for event registrations
      properties:
        event:
          type: string
          format: uuid
          nullable: true
        member_id:
          type: string
          format: uuid
          writeOnly: true
        status:
          $ref: '#/components/schemas/EventRegistrationStatusEnum'
        notes:
          type: string
          description: Additional notes or comments
        dietary_requirements:
          type: string
          description: Special dietary needs or restrictions
          maxLength: 500
        emergency_contact_name:
          type: string
          maxLength: 200
        emergency_contact_phone:
          type: string
          maxLength: 20
        accessibility_needs:
          type: string
          description: Any accessibility accommodations needed
          maxLength: 500
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_reference:
          type: string
          description: Payment reference number or transaction ID
          maxLength: 100
        payment_date:
          type: string
          format: date-time
          nullable: true
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
      required:
      - member_id
    EventRegistrationStatusEnum:
      enum:
      - pending
      - confirmed
      - cancelled
      - waitlist
      - attended
      - no_show
      - refunded
      type: string
      description: |-
        * `pending` - Pending Approval
        * `confirmed` - Confirmed
        * `cancelled` - Cancelled
        * `waitlist` - Waitlisted
        * `attended` - Attended
        * `no_show` - No Show
        * `refunded` - Refunded
    EventReminder:
      type: object
      description: Serializer for event reminders
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        event:
          type: string
          format: uuid
        event_title:
          type: string
          readOnly: true
        reminder_type:
          $ref: '#/components/schemas/EventReminderReminderTypeEnum'
        reminder_type_display:
          type: string
          readOnly: true
        reminder_method:
          $ref: '#/components/schemas/EventReminderReminderMethodEnum'
        reminder_method_display:
          type: string
          readOnly: true
        send_at:
          type: string
          format: date-time
          description: When to send the reminder
        days_before:
          type: integer
          maximum: 365
          minimum: 1
          nullable: true
          description: Days before event to send (for automatic reminders)
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          description: Reminder message content
        send_to_all:
          type: boolean
          description: Send to all registered members
        target_statuses:
          type: string
          description: Comma-separated list of registration statuses to target
          maxLength: 200
        sent:
          type: boolean
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        sent_count:
          type: integer
          readOnly: true
          description: Number of recipients
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
      required:
      - event
      - send_at
    EventReminderReminderMethodEnum:
      enum:
      - email
      - sms
      - both
      - push
      type: string
      description: |-
        * `email` - Email
        * `sms` - SMS
        * `both` - Email and SMS
        * `push` - Push Notification
    EventReminderReminderTypeEnum:
      enum:
      - automatic
      - manual
      - follow_up
      type: string
      description: |-
        * `automatic` - Automatic
        * `manual` - Manual
        * `follow_up` - Follow-up
    EventReminderRequest:
      type: object
      description: Serializer for event reminders
      properties:
        event:
          type: string
          format: uuid
        reminder_type:
          $ref: '#/components/schemas/EventReminderReminderTypeEnum'
        reminder_method:
          $ref: '#/components/schemas/EventReminderReminderMethodEnum'
        send_at:
          type: string
          format: date-time
          description: When to send the reminder
        days_before:
          type: integer
          maximum: 365
          minimum: 1
          nullable: true
          description: Days before event to send (for automatic reminders)
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          description: Reminder message content
        send_to_all:
          type: boolean
          description: Send to all registered members
        target_statuses:
          type: string
          description: Comma-separated list of registration statuses to target
          maxLength: 200
        sent:
          type: boolean
      required:
      - event
      - send_at
    EventRequest:
      type: object
      description: Main event serializer with full details
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          description: Full event description
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        category_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        location:
          type: string
          description: Event location
          maxLength: 255
        location_details:
          type: string
          description: Additional location information
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Last date/time for registration
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        contact_email:
          type: string
          format: email
          description: Contact email for questions
          maxLength: 254
        contact_phone:
          type: string
          description: Contact phone number
          maxLength: 20
        target_group_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        age_min:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Minimum age requirement
        age_max:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Maximum age requirement
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        is_featured:
          type: boolean
          description: Feature this event prominently
        prerequisites:
          type: string
          description: Requirements, items to bring, or preparation needed
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to event poster or promotional image
          maxLength: 200
        external_registration_url:
          type: string
          format: uri
          nullable: true
          description: External registration link (if using third-party system)
          maxLength: 200
      required:
      - end_datetime
      - start_datetime
      - title
    EventTypeEnum:
      enum:
      - service
      - workshop
      - meeting
      - social
      - outreach
      - conference
      - retreat
      - fundraiser
      - youth
      - kids
      - seniors
      - prayer
      - bible_study
      - baptism
      - wedding
      - funeral
      - other
      type: string
      description: |-
        * `service` - Church Service
        * `workshop` - Workshop
        * `meeting` - Meeting
        * `social` - Social Event
        * `outreach` - Outreach
        * `conference` - Conference
        * `retreat` - Retreat
        * `fundraiser` - Fundraiser
        * `youth` - Youth Event
        * `kids` - Kids Event
        * `seniors` - Seniors Event
        * `prayer` - Prayer Meeting
        * `bible_study` - Bible Study
        * `baptism` - Baptism
        * `wedding` - Wedding
        * `funeral` - Memorial Service
        * `other` - Other
    EventVolunteer:
      type: object
      description: Serializer for event volunteers
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        event:
          type: string
          format: uuid
        member:
          allOf:
          - $ref: '#/components/schemas/EventMemberSummary'
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/EventVolunteerRoleEnum'
          default: other
        role_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/EventVolunteerStatusEnum'
        status_display:
          type: string
          readOnly: true
        role_description:
          type: string
          description: Specific duties and responsibilities
        start_time:
          type: string
          format: date-time
          nullable: true
          description: Volunteer start time
        end_time:
          type: string
          format: date-time
          nullable: true
          description: Volunteer end time
        notes:
          type: string
        invited_date:
          type: string
          format: date-time
          readOnly: true
        response_date:
          type: string
          format: date-time
          nullable: true
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
        hours_volunteered:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
      required:
      - event
    EventVolunteerRequest:
      type: object
      description: Serializer for event volunteers
      properties:
        event:
          type: string
          format: uuid
        member_id:
          type: string
          format: uuid
          writeOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/EventVolunteerRoleEnum'
          default: other
        status:
          $ref: '#/components/schemas/EventVolunteerStatusEnum'
        role_description:
          type: string
          description: Specific duties and responsibilities
        start_time:
          type: string
          format: date-time
          nullable: true
          description: Volunteer start time
        end_time:
          type: string
          format: date-time
          nullable: true
          description: Volunteer end time
        notes:
          type: string
        response_date:
          type: string
          format: date-time
          nullable: true
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
      required:
      - event
      - member_id
    EventVolunteerRoleEnum:
      enum:
      - coordinator
      - setup
      - registration
      - usher
      - security
      - tech
      - catering
      - childcare
      - cleanup
      - photographer
      - other
      type: string
      description: |-
        * `coordinator` - Event Coordinator
        * `setup` - Setup Crew
        * `registration` - Registration Desk
        * `usher` - Usher
        * `security` - Security
        * `tech` - Technical Support
        * `catering` - Catering/Food Service
        * `childcare` - Childcare
        * `cleanup` - Cleanup Crew
        * `photographer` - Photographer
        * `other` - Other
    EventVolunteerStatusEnum:
      enum:
      - invited
      - confirmed
      - declined
      - completed
      - no_show
      type: string
      description: |-
        * `invited` - Invited
        * `confirmed` - Confirmed
        * `declined` - Declined
        * `completed` - Completed
        * `no_show` - No Show
    Family:
      type: object
      description: Complete serializer for family with all relationships and details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        family_name:
          type: string
          maxLength: 255
        primary_contact_name:
          type: string
          readOnly: true
        primary_contact_email:
          type: string
          format: email
          readOnly: true
        primary_contact_phone:
          type: string
          readOnly: true
        address:
          type: string
          nullable: true
          description: Family address
        notes:
          type: string
          nullable: true
          description: Additional notes about the family
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        family_relationships:
          type: array
          items:
            $ref: '#/components/schemas/FamilyRelationshipSummary'
          readOnly: true
        member_count:
          type: string
          readOnly: true
        children_count:
          type: string
          readOnly: true
        adults_count:
          type: string
          readOnly: true
        dependents_count:
          type: string
          readOnly: true
        family_summary:
          type: string
          readOnly: true
        contact_info:
          type: string
          readOnly: true
        head_of_household:
          type: string
          readOnly: true
        spouse_info:
          type: string
          readOnly: true
      required:
      - family_name
    FamilyRelationship:
      type: object
      description: Serializer for family relationships with full member details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member_name:
          type: string
          readOnly: true
        member_email:
          type: string
          format: email
          readOnly: true
        member_phone:
          type: string
          readOnly: true
        member_date_of_birth:
          type: string
          format: date
          readOnly: true
        member_gender:
          type: string
          readOnly: true
        relationship_type:
          allOf:
          - $ref: '#/components/schemas/RelationshipTypeEnum'
          description: |-
            Type of relationship to the family

            * `head` - Head of Household
            * `spouse` - Spouse
            * `child` - Child
            * `dependent` - Dependent
            * `other` - Other
        relationship_type_display:
          type: string
          readOnly: true
        notes:
          type: string
          nullable: true
          description: Additional notes about this relationship
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_adult:
          type: boolean
          readOnly: true
        is_child:
          type: boolean
          readOnly: true
        relationship_priority:
          type: integer
          readOnly: true
    FamilyRelationshipRequest:
      type: object
      description: Serializer for family relationships with full member details
      properties:
        member_id:
          type: string
          format: uuid
          writeOnly: true
        relationship_type:
          allOf:
          - $ref: '#/components/schemas/RelationshipTypeEnum'
          description: |-
            Type of relationship to the family

            * `head` - Head of Household
            * `spouse` - Spouse
            * `child` - Child
            * `dependent` - Dependent
            * `other` - Other
        notes:
          type: string
          nullable: true
          description: Additional notes about this relationship
    FamilyRelationshipSummary:
      type: object
      description: Lightweight serializer for family relationships in listings
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member_name:
          type: string
          readOnly: true
        relationship_type:
          allOf:
          - $ref: '#/components/schemas/RelationshipTypeEnum'
          description: |-
            Type of relationship to the family

            * `head` - Head of Household
            * `spouse` - Spouse
            * `child` - Child
            * `dependent` - Dependent
            * `other` - Other
        relationship_type_display:
          type: string
          readOnly: true
    FamilyRelationshipSummaryRequest:
      type: object
      description: Lightweight serializer for family relationships in listings
      properties:
        relationship_type:
          allOf:
          - $ref: '#/components/schemas/RelationshipTypeEnum'
          description: |-
            Type of relationship to the family

            * `head` - Head of Household
            * `spouse` - Spouse
            * `child` - Child
            * `dependent` - Dependent
            * `other` - Other
    FamilyRequest:
      type: object
      description: Complete serializer for family with all relationships and details
      properties:
        family_name:
          type: string
          minLength: 1
          maxLength: 255
        primary_contact_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        address:
          type: string
          nullable: true
          description: Family address
        notes:
          type: string
          nullable: true
          description: Additional notes about the family
      required:
      - family_name
    FamilySummary:
      type: object
      description: Lightweight serializer for family listings
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        family_name:
          type: string
          maxLength: 255
        primary_contact_name:
          type: string
          readOnly: true
        member_count:
          type: integer
          readOnly: true
        children_count:
          type: integer
          readOnly: true
        adults_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - family_name
    FamilySummaryRequest:
      type: object
      description: Placeholder for family summary
      properties:
        id:
          type: string
          format: uuid
        family_name:
          type: string
          minLength: 1
      required:
      - family_name
      - id
    FormatEnum:
      enum:
      - csv
      - excel
      - pdf
      - json
      type: string
      description: |-
        * `csv` - CSV
        * `excel` - Excel
        * `pdf` - PDF
        * `json` - JSON
    FrequencyA85Enum:
      enum:
      - one-time
      - weekly
      - monthly
      - quarterly
      - annually
      type: string
      description: |-
        * `one-time` - One Time
        * `weekly` - Weekly
        * `monthly` - Monthly
        * `quarterly` - Quarterly
        * `annually` - Annually
    GenderEnum:
      enum:
      - male
      - female
      - other
      - prefer_not_to_say
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `other` - Other
        * `prefer_not_to_say` - Prefer not to say
    Group:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the group or ministry
          maxLength: 255
          minLength: 2
        description:
          type: string
          nullable: true
          description: Detailed description of the group's purpose and activities
        leader_name:
          type: string
          nullable: true
          description: Name of the group leader
          maxLength: 255
        leader:
          allOf:
          - $ref: '#/components/schemas/MemberSummary'
          readOnly: true
        leader_name_display:
          type: string
          readOnly: true
        meeting_schedule:
          type: string
          nullable: true
          description: When and where the group meets
          maxLength: 500
        meeting_location:
          type: string
          nullable: true
          description: Physical or virtual meeting location
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          description: Contact email for the group
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          description: Contact phone number for the group
          maxLength: 20
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum number of members (leave blank for unlimited)
        is_active:
          type: boolean
          description: Whether the group is currently active
        is_public:
          type: boolean
          description: Whether the group is visible to members for joining
        requires_approval:
          type: boolean
          description: Whether new members need approval to join
        age_restriction:
          type: string
          nullable: true
          description: Age restrictions for the group (e.g., 'Adults only', 'Youth
            13-18')
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MemberGroupRelationship'
          readOnly: true
        active_memberships:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/GroupCategorySummary'
          readOnly: true
        member_count:
          type: string
          readOnly: true
        pending_requests_count:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        available_spots:
          type: string
          readOnly: true
      required:
      - name
    GroupCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        color:
          type: string
          description: Hex color code for category display
          maxLength: 7
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        group_count:
          type: string
          readOnly: true
      required:
      - name
    GroupCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
        color:
          type: string
          minLength: 1
          description: Hex color code for category display
          maxLength: 7
        is_active:
          type: boolean
      required:
      - name
    GroupCategorySummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        color:
          type: string
          description: Hex color code for category display
          maxLength: 7
      required:
      - name
    GroupCategorySummaryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        color:
          type: string
          minLength: 1
          description: Hex color code for category display
          maxLength: 7
      required:
      - name
    GroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          description: Name of the group or ministry
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Detailed description of the group's purpose and activities
        leader_name:
          type: string
          nullable: true
          description: Name of the group leader
          maxLength: 255
        leader_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        meeting_schedule:
          type: string
          nullable: true
          description: When and where the group meets
          maxLength: 500
        meeting_location:
          type: string
          nullable: true
          description: Physical or virtual meeting location
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          description: Contact email for the group
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          description: Contact phone number for the group
          maxLength: 20
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum number of members (leave blank for unlimited)
        is_active:
          type: boolean
          description: Whether the group is currently active
        is_public:
          type: boolean
          description: Whether the group is visible to members for joining
        requires_approval:
          type: boolean
          description: Whether new members need approval to join
        age_restriction:
          type: string
          nullable: true
          description: Age restrictions for the group (e.g., 'Adults only', 'Youth
            13-18')
          maxLength: 100
        category_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
      required:
      - name
    GroupSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the group or ministry
          maxLength: 255
          minLength: 2
        description:
          type: string
          nullable: true
          description: Detailed description of the group's purpose and activities
        leader_name_display:
          type: string
          readOnly: true
        meeting_schedule:
          type: string
          nullable: true
          description: When and where the group meets
          maxLength: 500
        meeting_location:
          type: string
          nullable: true
          description: Physical or virtual meeting location
          maxLength: 255
        member_count:
          type: string
          readOnly: true
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum number of members (leave blank for unlimited)
        is_active:
          type: boolean
          description: Whether the group is currently active
        is_public:
          type: boolean
          description: Whether the group is visible to members for joining
        requires_approval:
          type: boolean
          description: Whether new members need approval to join
        age_restriction:
          type: string
          nullable: true
          description: Age restrictions for the group (e.g., 'Adults only', 'Youth
            13-18')
          maxLength: 100
        categories:
          type: array
          items:
            $ref: '#/components/schemas/GroupCategorySummary'
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_join_status:
          type: string
          readOnly: true
      required:
      - name
    Login:
      type: object
      description: Enhanced login serializer with security features and audit logging
      properties:
        email:
          type: string
          format: email
          description: User's email address
        remember_me:
          type: boolean
          default: false
          description: Keep user logged in for extended period
      required:
      - email
    LoginAttempt:
      type: object
      description: Serializer for login attempt records (read-only for security monitoring)
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          nullable: true
        ip_address:
          type: string
          readOnly: true
        success:
          type: boolean
          readOnly: true
        attempted_at:
          type: string
          format: date-time
          readOnly: true
        user_agent:
          type: string
          readOnly: true
        user_agent_preview:
          type: string
          readOnly: true
        time_ago:
          type: string
          readOnly: true
    LoginRequest:
      type: object
      description: Enhanced login serializer with security features and audit logging
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: User's email address
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: User's password
        remember_me:
          type: boolean
          default: false
          description: Keep user logged in for extended period
      required:
      - email
      - password
    MemberCreate:
      type: object
      description: Public member creation - phone OPTIONAL
      properties:
        first_name:
          type: string
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        email:
          type: string
          format: email
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          description: General notes about the member
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        privacy_policy_agreed:
          type: boolean
      required:
      - email
      - first_name
      - last_name
    MemberCreateRequest:
      type: object
      description: Public member creation - phone OPTIONAL
      properties:
        first_name:
          type: string
          minLength: 1
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        email:
          type: string
          format: email
          minLength: 1
          description: Primary email address
          maxLength: 254
        confirm_email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          description: General notes about the member
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        privacy_policy_agreed:
          type: boolean
      required:
      - email
      - first_name
      - last_name
    MemberDetail:
      type: object
      description: Full serializer for member details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        age:
          type: string
          readOnly: true
        age_group:
          type: string
          readOnly: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        photo_url:
          type: string
          format: uri
          nullable: true
          description: URL to member's profile photo
          maxLength: 200
        family:
          allOf:
          - $ref: '#/components/schemas/FamilySummary'
          readOnly: true
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        registration_date:
          type: string
          format: date-time
          readOnly: true
          description: When the member was registered
        last_updated:
          type: string
          format: date-time
          readOnly: true
        last_contact_date:
          type: string
          format: date-time
          nullable: true
          description: Date of last contact with this member
        notes:
          type: string
          nullable: true
          description: General notes about the member
        is_active:
          type: boolean
          description: Whether the member is currently active
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        privacy_policy_agreed:
          type: boolean
        privacy_policy_agreed_date:
          type: string
          format: date-time
          nullable: true
        member_notes:
          type: array
          items:
            $ref: '#/components/schemas/MemberNote'
          readOnly: true
        tag_assignments:
          type: array
          items:
            $ref: '#/components/schemas/MemberTagAssignment'
          readOnly: true
        tags:
          type: string
          readOnly: true
        registration_source:
          $ref: '#/components/schemas/RegistrationSourceEnum'
        registered_by_name:
          type: string
          readOnly: true
        last_modified_by_name:
          type: string
          readOnly: true
        internal_notes:
          type: string
          nullable: true
          description: Internal notes not visible to the member
        import_batch_id:
          type: string
          format: uuid
          nullable: true
          description: Batch ID if imported via bulk import
        import_validation_overridden:
          type: boolean
          description: Whether validation was overridden during import
      required:
      - email
      - first_name
      - last_name
    MemberDetailRequest:
      type: object
      description: Full serializer for member details
      properties:
        first_name:
          type: string
          minLength: 1
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        email:
          type: string
          format: email
          minLength: 1
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        photo_url:
          type: string
          format: uri
          nullable: true
          description: URL to member's profile photo
          maxLength: 200
        family_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        last_contact_date:
          type: string
          format: date-time
          nullable: true
          description: Date of last contact with this member
        notes:
          type: string
          nullable: true
          description: General notes about the member
        is_active:
          type: boolean
          description: Whether the member is currently active
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        privacy_policy_agreed:
          type: boolean
        privacy_policy_agreed_date:
          type: string
          format: date-time
          nullable: true
        registration_source:
          $ref: '#/components/schemas/RegistrationSourceEnum'
        internal_notes:
          type: string
          nullable: true
          description: Internal notes not visible to the member
        import_batch_id:
          type: string
          format: uuid
          nullable: true
          description: Batch ID if imported via bulk import
        import_validation_overridden:
          type: boolean
          description: Whether validation was overridden during import
      required:
      - email
      - first_name
      - last_name
    MemberExport:
      type: object
      description: Serializer for exporting member data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type: string
          readOnly: true
        first_name:
          type: string
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          description: Member's last name
          maxLength: 100
        email:
          type: string
          format: email
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        age:
          type: string
          readOnly: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        family_name:
          type: string
          readOnly: true
        registration_date:
          type: string
          format: date-time
          description: When the member was registered
        is_active:
          type: boolean
          description: Whether the member is currently active
      required:
      - email
      - first_name
      - last_name
    MemberGroupRelationship:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member:
          allOf:
          - $ref: '#/components/schemas/MemberSummary'
          readOnly: true
        group_name:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/MemberGroupRelationshipRoleEnum'
        role_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/MemberGroupRelationshipStatusEnum'
        status_display:
          type: string
          readOnly: true
        join_date:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
          nullable: true
          description: When the member officially started in this role
        end_date:
          type: string
          format: date
          nullable: true
          description: When the member left or role ended
        is_active:
          type: boolean
          description: Whether this membership is currently active
        notes:
          type: string
          nullable: true
          description: Additional notes about this membership
    MemberGroupRelationshipRequest:
      type: object
      properties:
        member_id:
          type: string
          format: uuid
          writeOnly: true
        role:
          $ref: '#/components/schemas/MemberGroupRelationshipRoleEnum'
        status:
          $ref: '#/components/schemas/MemberGroupRelationshipStatusEnum'
        start_date:
          type: string
          format: date
          nullable: true
          description: When the member officially started in this role
        end_date:
          type: string
          format: date
          nullable: true
          description: When the member left or role ended
        is_active:
          type: boolean
          description: Whether this membership is currently active
        notes:
          type: string
          nullable: true
          description: Additional notes about this membership
      required:
      - member_id
    MemberGroupRelationshipRoleEnum:
      enum:
      - member
      - leader
      - co_leader
      - assistant
      type: string
      description: |-
        * `member` - Member
        * `leader` - Leader
        * `co_leader` - Co-Leader
        * `assistant` - Assistant
    MemberGroupRelationshipStatusEnum:
      enum:
      - active
      - inactive
      - pending
      - declined
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
        * `pending` - Pending Approval
        * `declined` - Declined
    MemberNote:
      type: object
      description: Serializer for member notes
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        note:
          type: string
          description: Note content
        is_private:
          type: boolean
          description: Private notes are only visible to senior staff
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - note
    MemberNoteRequest:
      type: object
      description: Serializer for member notes
      properties:
        note:
          type: string
          minLength: 1
          description: Note content
        is_private:
          type: boolean
          description: Private notes are only visible to senior staff
      required:
      - note
    MemberSummary:
      type: object
      description: Lightweight serializer for member lists
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          description: Member's last name
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        age:
          type: string
          readOnly: true
        age_group:
          type: string
          readOnly: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_active:
          type: boolean
          description: Whether the member is currently active
        registration_date:
          type: string
          format: date-time
          description: When the member was registered
      required:
      - email
      - first_name
      - last_name
    MemberSummaryRequest:
      type: object
      description: Lightweight serializer for member lists
      properties:
        first_name:
          type: string
          minLength: 1
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Member's last name
          maxLength: 100
        email:
          type: string
          format: email
          minLength: 1
          description: Primary email address
          maxLength: 254
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_active:
          type: boolean
          description: Whether the member is currently active
        registration_date:
          type: string
          format: date-time
          description: When the member was registered
      required:
      - email
      - first_name
      - last_name
    MemberTag:
      type: object
      description: Serializer for member tags
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        color:
          type: string
          description: 'Hex color code for the tag (e.g., #FF5733)'
          maxLength: 7
        description:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    MemberTagAssignment:
      type: object
      description: Serializer for member tag assignments
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tag:
          allOf:
          - $ref: '#/components/schemas/MemberTag'
          readOnly: true
        assigned_by_name:
          type: string
          readOnly: true
        assigned_at:
          type: string
          format: date-time
          readOnly: true
    MemberTagAssignmentRequest:
      type: object
      description: Serializer for member tag assignments
      properties:
        tag_id:
          type: string
          format: uuid
          writeOnly: true
      required:
      - tag_id
    MemberTagRequest:
      type: object
      description: Serializer for member tags
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        color:
          type: string
          minLength: 1
          description: 'Hex color code for the tag (e.g., #FF5733)'
          maxLength: 7
        description:
          type: string
          nullable: true
      required:
      - name
    MemberUpdate:
      type: object
      description: Serializer for updating members
      properties:
        first_name:
          type: string
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        photo_url:
          type: string
          format: uri
          nullable: true
          description: URL to member's profile photo
          maxLength: 200
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        last_contact_date:
          type: string
          format: date-time
          nullable: true
          description: Date of last contact with this member
        notes:
          type: string
          nullable: true
          description: General notes about the member
        is_active:
          type: boolean
          description: Whether the member is currently active
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        internal_notes:
          type: string
          nullable: true
          description: Internal notes not visible to the member
      required:
      - first_name
      - last_name
    MemberUpdateRequest:
      type: object
      description: Serializer for updating members
      properties:
        first_name:
          type: string
          minLength: 1
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        photo_url:
          type: string
          format: uri
          nullable: true
          description: URL to member's profile photo
          maxLength: 200
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        last_contact_date:
          type: string
          format: date-time
          nullable: true
          description: Date of last contact with this member
        notes:
          type: string
          nullable: true
          description: General notes about the member
        is_active:
          type: boolean
          description: Whether the member is currently active
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        internal_notes:
          type: string
          nullable: true
          description: Internal notes not visible to the member
      required:
      - first_name
      - last_name
    NullEnum:
      enum:
      - null
    PaginatedAdminUserListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminUserList'
    PaginatedBulkImportLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkImportLog'
    PaginatedEventCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventCategory'
    PaginatedEventListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventList'
    PaginatedEventRegistrationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventRegistration'
    PaginatedEventReminderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventReminder'
    PaginatedEventVolunteerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventVolunteer'
    PaginatedFamilyRelationshipList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FamilyRelationship'
    PaginatedFamilySummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FamilySummary'
    PaginatedGroupCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupCategory'
    PaginatedGroupSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupSummary'
    PaginatedLoginAttemptList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LoginAttempt'
    PaginatedMemberGroupRelationshipList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberGroupRelationship'
    PaginatedMemberNoteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberNote'
    PaginatedMemberSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberSummary'
    PaginatedMemberTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberTag'
    PaginatedPledgeListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PledgeList'
    PaginatedPledgePaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PledgePayment'
    PaginatedPledgeReminderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PledgeReminder'
    PaginatedReportList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    PaginatedReportRunList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportRun'
    PaginatedReportTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportTemplate'
    PasswordChangeRequest:
      type: object
      description: Enhanced password change serializer with security validations
      properties:
        current_password:
          type: string
          writeOnly: true
          minLength: 1
          description: Current password for verification
        new_password:
          type: string
          writeOnly: true
          minLength: 1
          description: New password (8+ characters with complexity requirements)
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
          description: Confirm new password
      required:
      - confirm_password
      - current_password
      - new_password
    PasswordResetConfirm:
      type: object
      description: Enhanced password reset confirmation serializer
      properties:
        token:
          type: string
          description: Password reset token from email
      required:
      - token
    PasswordResetConfirmRequest:
      type: object
      description: Enhanced password reset confirmation serializer
      properties:
        token:
          type: string
          minLength: 1
          description: Password reset token from email
        new_password:
          type: string
          writeOnly: true
          minLength: 1
          description: New password
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
          description: Confirm new password
      required:
      - confirm_password
      - new_password
      - token
    PasswordResetRequest:
      type: object
      description: Enhanced password reset request serializer with security features
      properties:
        email:
          type: string
          format: email
          description: Email address associated with your account
      required:
      - email
    PasswordResetRequestRequest:
      type: object
      description: Enhanced password reset request serializer with security features
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: Email address associated with your account
      required:
      - email
    PatchedAdminUserRequest:
      type: object
      description: Enhanced admin user serializer with comprehensive validation and
        security
      properties:
        username:
          type: string
          minLength: 1
          description: Unique username (3-30 characters, alphanumeric, underscore,
            hyphen only)
          pattern: ^[a-zA-Z0-9_-]+$
          maxLength: 30
        email:
          type: string
          format: email
          minLength: 1
          description: User's email address (used for login)
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        last_name:
          type: string
          description: User's last name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        role:
          allOf:
          - $ref: '#/components/schemas/Role85eEnum'
          description: |-
            User's role determining access permissions

            * `super_admin` - Super Administrator
            * `admin` - Administrator
            * `readonly` - Read Only User
        active:
          type: boolean
          description: Whether the user account is active
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Password (8+ characters with mixed case, numbers, and symbols)
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
          description: Confirm password
    PatchedEventCategoryRequest:
      type: object
      description: Serializer for event categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        color:
          type: string
          minLength: 1
          description: Hex color code
          maxLength: 7
        is_active:
          type: boolean
    PatchedEventCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating events
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          description: Full event description
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        category_id:
          type: string
          format: uuid
          nullable: true
        location:
          type: string
          description: Event location
          maxLength: 255
        location_details:
          type: string
          description: Additional location information
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Last date/time for registration
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Maximum number of attendees (leave blank for unlimited)
        requires_registration:
          type: boolean
          description: Whether registration is required to attend
        registration_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Registration fee amount (0 for free events)
        organizer:
          type: string
          description: Event organizer name
          maxLength: 200
        contact_email:
          type: string
          format: email
          description: Contact email for questions
          maxLength: 254
        contact_phone:
          type: string
          description: Contact phone number
          maxLength: 20
        target_group_ids:
          type: array
          items:
            type: string
            format: uuid
        age_min:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Minimum age requirement
        age_max:
          type: integer
          maximum: 120
          minimum: 0
          nullable: true
          description: Maximum age requirement
        status:
          $ref: '#/components/schemas/StatusEd5Enum'
        is_public:
          type: boolean
          description: Show on public calendar and allow public registration
        is_featured:
          type: boolean
          description: Feature this event prominently
        prerequisites:
          type: string
          description: Requirements, items to bring, or preparation needed
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to event poster or promotional image
          maxLength: 200
        external_registration_url:
          type: string
          format: uri
          nullable: true
          description: External registration link (if using third-party system)
          maxLength: 200
    PatchedEventRegistrationRequest:
      type: object
      description: Serializer for event registrations
      properties:
        event:
          type: string
          format: uuid
          nullable: true
        member_id:
          type: string
          format: uuid
          writeOnly: true
        status:
          $ref: '#/components/schemas/EventRegistrationStatusEnum'
        notes:
          type: string
          description: Additional notes or comments
        dietary_requirements:
          type: string
          description: Special dietary needs or restrictions
          maxLength: 500
        emergency_contact_name:
          type: string
          maxLength: 200
        emergency_contact_phone:
          type: string
          maxLength: 20
        accessibility_needs:
          type: string
          description: Any accessibility accommodations needed
          maxLength: 500
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_reference:
          type: string
          description: Payment reference number or transaction ID
          maxLength: 100
        payment_date:
          type: string
          format: date-time
          nullable: true
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
    PatchedEventReminderRequest:
      type: object
      description: Serializer for event reminders
      properties:
        event:
          type: string
          format: uuid
        reminder_type:
          $ref: '#/components/schemas/EventReminderReminderTypeEnum'
        reminder_method:
          $ref: '#/components/schemas/EventReminderReminderMethodEnum'
        send_at:
          type: string
          format: date-time
          description: When to send the reminder
        days_before:
          type: integer
          maximum: 365
          minimum: 1
          nullable: true
          description: Days before event to send (for automatic reminders)
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          description: Reminder message content
        send_to_all:
          type: boolean
          description: Send to all registered members
        target_statuses:
          type: string
          description: Comma-separated list of registration statuses to target
          maxLength: 200
        sent:
          type: boolean
    PatchedEventVolunteerRequest:
      type: object
      description: Serializer for event volunteers
      properties:
        event:
          type: string
          format: uuid
        member_id:
          type: string
          format: uuid
          writeOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/EventVolunteerRoleEnum'
          default: other
        status:
          $ref: '#/components/schemas/EventVolunteerStatusEnum'
        role_description:
          type: string
          description: Specific duties and responsibilities
        start_time:
          type: string
          format: date-time
          nullable: true
          description: Volunteer start time
        end_time:
          type: string
          format: date-time
          nullable: true
          description: Volunteer end time
        notes:
          type: string
        response_date:
          type: string
          format: date-time
          nullable: true
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
    PatchedFamilyRelationshipRequest:
      type: object
      description: Serializer for family relationships with full member details
      properties:
        member_id:
          type: string
          format: uuid
          writeOnly: true
        relationship_type:
          allOf:
          - $ref: '#/components/schemas/RelationshipTypeEnum'
          description: |-
            Type of relationship to the family

            * `head` - Head of Household
            * `spouse` - Spouse
            * `child` - Child
            * `dependent` - Dependent
            * `other` - Other
        notes:
          type: string
          nullable: true
          description: Additional notes about this relationship
    PatchedFamilyRequest:
      type: object
      description: Complete serializer for family with all relationships and details
      properties:
        family_name:
          type: string
          minLength: 1
          maxLength: 255
        primary_contact_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        address:
          type: string
          nullable: true
          description: Family address
        notes:
          type: string
          nullable: true
          description: Additional notes about the family
    PatchedGroupCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
        color:
          type: string
          minLength: 1
          description: Hex color code for category display
          maxLength: 7
        is_active:
          type: boolean
    PatchedGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          description: Name of the group or ministry
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Detailed description of the group's purpose and activities
        leader_name:
          type: string
          nullable: true
          description: Name of the group leader
          maxLength: 255
        leader_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        meeting_schedule:
          type: string
          nullable: true
          description: When and where the group meets
          maxLength: 500
        meeting_location:
          type: string
          nullable: true
          description: Physical or virtual meeting location
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          description: Contact email for the group
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          description: Contact phone number for the group
          maxLength: 20
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum number of members (leave blank for unlimited)
        is_active:
          type: boolean
          description: Whether the group is currently active
        is_public:
          type: boolean
          description: Whether the group is visible to members for joining
        requires_approval:
          type: boolean
          description: Whether new members need approval to join
        age_restriction:
          type: string
          nullable: true
          description: Age restrictions for the group (e.g., 'Adults only', 'Youth
            13-18')
          maxLength: 100
        category_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
    PatchedMemberGroupRelationshipRequest:
      type: object
      properties:
        member_id:
          type: string
          format: uuid
          writeOnly: true
        role:
          $ref: '#/components/schemas/MemberGroupRelationshipRoleEnum'
        status:
          $ref: '#/components/schemas/MemberGroupRelationshipStatusEnum'
        start_date:
          type: string
          format: date
          nullable: true
          description: When the member officially started in this role
        end_date:
          type: string
          format: date
          nullable: true
          description: When the member left or role ended
        is_active:
          type: boolean
          description: Whether this membership is currently active
        notes:
          type: string
          nullable: true
          description: Additional notes about this membership
    PatchedMemberNoteRequest:
      type: object
      description: Serializer for member notes
      properties:
        note:
          type: string
          minLength: 1
          description: Note content
        is_private:
          type: boolean
          description: Private notes are only visible to senior staff
    PatchedMemberTagRequest:
      type: object
      description: Serializer for member tags
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        color:
          type: string
          minLength: 1
          description: 'Hex color code for the tag (e.g., #FF5733)'
          maxLength: 7
        description:
          type: string
          nullable: true
    PatchedMemberUpdateRequest:
      type: object
      description: Serializer for updating members
      properties:
        first_name:
          type: string
          minLength: 1
          description: Member's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Member's last name
          maxLength: 100
        preferred_name:
          type: string
          nullable: true
          description: Name the member prefers to be called
          maxLength: 100
        phone:
          type: string
          nullable: true
          description: Phone number (supports international formats like +233241234567)
        alternate_phone:
          type: string
          nullable: true
          description: Alternative phone number
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth (YYYY-MM-DD)
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        address:
          type: string
          nullable: true
          description: Full address
        preferred_contact_method:
          $ref: '#/components/schemas/PreferredContactMethodEnum'
        preferred_language:
          $ref: '#/components/schemas/PreferredLanguageEnum'
        accessibility_needs:
          type: string
          nullable: true
          description: Any accessibility requirements or special needs
        photo_url:
          type: string
          format: uri
          nullable: true
          description: URL to member's profile photo
          maxLength: 200
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 100
        emergency_contact_phone:
          type: string
          nullable: true
        last_contact_date:
          type: string
          format: date-time
          nullable: true
          description: Date of last contact with this member
        notes:
          type: string
          nullable: true
          description: General notes about the member
        is_active:
          type: boolean
          description: Whether the member is currently active
        communication_opt_in:
          type: boolean
          description: Consent to receive communications
        internal_notes:
          type: string
          nullable: true
          description: Internal notes not visible to the member
    PatchedPledgeCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating pledges
      properties:
        member:
          type: string
          format: uuid
          description: Member making the pledge
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Pledge amount per frequency period
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyA85Enum'
          description: |-
            How often the pledge is made

            * `one-time` - One Time
            * `weekly` - Weekly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `annually` - Annually
        start_date:
          type: string
          format: date
          description: When the pledge starts
        end_date:
          type: string
          format: date
          nullable: true
          description: When the pledge ends (optional for ongoing pledges)
        status:
          allOf:
          - $ref: '#/components/schemas/Status943Enum'
          description: |-
            Current status of the pledge

            * `active` - Active
            * `completed` - Completed
            * `cancelled` - Cancelled
            * `paused` - Paused
        notes:
          type: string
          description: Additional notes about the pledge
        total_pledged:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount pledged over the commitment period
    PatchedPledgePaymentRequest:
      type: object
      description: Serializer for pledge payment records
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        payment_date:
          type: string
          format: date
          description: Date when payment was received
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        reference_number:
          type: string
          description: Check number, transaction ID, etc.
          maxLength: 100
        notes:
          type: string
          description: Additional notes about the payment
        recorded_by:
          type: string
          description: Who recorded this payment
          maxLength: 100
    PatchedPledgeReminderRequest:
      type: object
      description: Serializer for pledge reminder records
      properties:
        reminder_type:
          $ref: '#/components/schemas/PledgeReminderReminderTypeEnum'
        reminder_method:
          $ref: '#/components/schemas/PledgeReminderReminderMethodEnum'
        sent_date:
          type: string
          format: date-time
        message:
          type: string
          minLength: 1
          description: Content of the reminder sent
        sent_by:
          type: string
          minLength: 1
          description: Who sent the reminder
          maxLength: 100
    PatchedReportRequest:
      type: object
      description: Serializer for Report model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        format:
          $ref: '#/components/schemas/FormatEnum'
        is_scheduled:
          type: boolean
        frequency:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReportFrequencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        next_run:
          type: string
          format: date-time
          nullable: true
        filters: {}
        columns: {}
        email_recipients: {}
        email_subject:
          type: string
          maxLength: 200
        email_body:
          type: string
        is_active:
          type: boolean
    PatchedReportTemplateRequest:
      type: object
      description: Serializer for ReportTemplate model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        default_filters: {}
        default_columns: {}
        default_format:
          $ref: '#/components/schemas/DefaultFormatEnum'
        is_system_template:
          type: boolean
        is_active:
          type: boolean
    PatchedUserProfileRequest:
      type: object
      description: Enhanced user profile serializer for self-service profile updates
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: User's email address (used for login)
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        last_name:
          type: string
          description: User's last name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
    PaymentMethodEnum:
      enum:
      - cash
      - check
      - card
      - bank_transfer
      - online
      - mobile
      - other
      type: string
      description: |-
        * `cash` - Cash
        * `check` - Check
        * `card` - Credit/Debit Card
        * `bank_transfer` - Bank Transfer
        * `online` - Online Payment
        * `mobile` - Mobile Payment
        * `other` - Other
    PaymentStatusEnum:
      enum:
      - not_required
      - pending
      - paid
      - partial
      - refunded
      - failed
      type: string
      description: |-
        * `not_required` - Not Required
        * `pending` - Payment Pending
        * `paid` - Paid
        * `partial` - Partially Paid
        * `refunded` - Refunded
        * `failed` - Payment Failed
    PledgeCreateUpdate:
      type: object
      description: Serializer for creating and updating pledges
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member:
          type: string
          format: uuid
          description: Member making the pledge
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Pledge amount per frequency period
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyA85Enum'
          description: |-
            How often the pledge is made

            * `one-time` - One Time
            * `weekly` - Weekly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `annually` - Annually
        start_date:
          type: string
          format: date
          description: When the pledge starts
        end_date:
          type: string
          format: date
          nullable: true
          description: When the pledge ends (optional for ongoing pledges)
        status:
          allOf:
          - $ref: '#/components/schemas/Status943Enum'
          description: |-
            Current status of the pledge

            * `active` - Active
            * `completed` - Completed
            * `cancelled` - Cancelled
            * `paused` - Paused
        notes:
          type: string
          description: Additional notes about the pledge
        total_pledged:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount pledged over the commitment period
      required:
      - amount
      - frequency
      - member
    PledgeCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating pledges
      properties:
        member:
          type: string
          format: uuid
          description: Member making the pledge
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Pledge amount per frequency period
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyA85Enum'
          description: |-
            How often the pledge is made

            * `one-time` - One Time
            * `weekly` - Weekly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `annually` - Annually
        start_date:
          type: string
          format: date
          description: When the pledge starts
        end_date:
          type: string
          format: date
          nullable: true
          description: When the pledge ends (optional for ongoing pledges)
        status:
          allOf:
          - $ref: '#/components/schemas/Status943Enum'
          description: |-
            Current status of the pledge

            * `active` - Active
            * `completed` - Completed
            * `cancelled` - Cancelled
            * `paused` - Paused
        notes:
          type: string
          description: Additional notes about the pledge
        total_pledged:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount pledged over the commitment period
      required:
      - amount
      - frequency
      - member
    PledgeDetail:
      type: object
      description: Detailed serializer for pledge detail views
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member:
          type: string
          format: uuid
          description: Member making the pledge
        member_details:
          allOf:
          - $ref: '#/components/schemas/PledgeMemberSummary'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Pledge amount per frequency period
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyA85Enum'
          description: |-
            How often the pledge is made

            * `one-time` - One Time
            * `weekly` - Weekly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `annually` - Annually
        frequency_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          description: When the pledge starts
        end_date:
          type: string
          format: date
          nullable: true
          description: When the pledge ends (optional for ongoing pledges)
        status:
          allOf:
          - $ref: '#/components/schemas/Status943Enum'
          description: |-
            Current status of the pledge

            * `active` - Active
            * `completed` - Completed
            * `cancelled` - Cancelled
            * `paused` - Paused
        status_display:
          type: string
          readOnly: true
        notes:
          type: string
          description: Additional notes about the pledge
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        total_pledged:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount pledged over the commitment period
        total_received:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          description: Total amount actually received
        completion_percentage:
          type: string
          readOnly: true
        annual_amount:
          type: number
          format: double
          description: Get annual pledge amount
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        remaining_amount:
          type: number
          format: float
          description: Calculate remaining amount to be paid
          readOnly: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PledgePayment'
          readOnly: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/PledgeReminder'
          readOnly: true
        payment_count:
          type: integer
          description: Get number of payments made
          readOnly: true
        last_payment_date:
          type: string
          format: date
          description: Get date of last payment
          readOnly: true
        next_expected_payment:
          type: string
          format: date
          description: |-
            Calculate next expected payment date based on frequency

            Returns:
                Optional[date]: The next expected payment date, or None if not applicable
          readOnly: true
      required:
      - amount
      - frequency
      - member
    PledgeDetailRequest:
      type: object
      description: Detailed serializer for pledge detail views
      properties:
        member:
          type: string
          format: uuid
          description: Member making the pledge
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Pledge amount per frequency period
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyA85Enum'
          description: |-
            How often the pledge is made

            * `one-time` - One Time
            * `weekly` - Weekly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `annually` - Annually
        start_date:
          type: string
          format: date
          description: When the pledge starts
        end_date:
          type: string
          format: date
          nullable: true
          description: When the pledge ends (optional for ongoing pledges)
        status:
          allOf:
          - $ref: '#/components/schemas/Status943Enum'
          description: |-
            Current status of the pledge

            * `active` - Active
            * `completed` - Completed
            * `cancelled` - Cancelled
            * `paused` - Paused
        notes:
          type: string
          description: Additional notes about the pledge
        total_pledged:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount pledged over the commitment period
      required:
      - amount
      - frequency
      - member
    PledgeList:
      type: object
      description: Simplified serializer for pledge list views
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        member:
          type: string
          format: uuid
          description: Member making the pledge
        member_details:
          allOf:
          - $ref: '#/components/schemas/PledgeMemberSummary'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Pledge amount per frequency period
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyA85Enum'
          description: |-
            How often the pledge is made

            * `one-time` - One Time
            * `weekly` - Weekly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `annually` - Annually
        frequency_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          description: When the pledge starts
        end_date:
          type: string
          format: date
          nullable: true
          description: When the pledge ends (optional for ongoing pledges)
        status:
          allOf:
          - $ref: '#/components/schemas/Status943Enum'
          description: |-
            Current status of the pledge

            * `active` - Active
            * `completed` - Completed
            * `cancelled` - Cancelled
            * `paused` - Paused
        status_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        total_pledged:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount pledged over the commitment period
        total_received:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Total amount actually received
        completion_percentage:
          type: string
          readOnly: true
        annual_amount:
          type: number
          format: double
          description: Get annual pledge amount
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        remaining_amount:
          type: number
          format: float
          description: Calculate remaining amount to be paid
          readOnly: true
        payment_count:
          type: integer
          description: Get number of payments made
          readOnly: true
        last_payment_date:
          type: string
          format: date
          description: Get date of last payment
          readOnly: true
      required:
      - amount
      - frequency
      - member
    PledgeMemberSummary:
      type: object
      description: Simple member summary for pledge serializers
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        phone:
          type: string
          readOnly: true
    PledgePayment:
      type: object
      description: Serializer for pledge payment records
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        payment_date:
          type: string
          format: date
          description: Date when payment was received
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_method_display:
          type: string
          readOnly: true
        reference_number:
          type: string
          description: Check number, transaction ID, etc.
          maxLength: 100
        notes:
          type: string
          description: Additional notes about the payment
        recorded_by:
          type: string
          description: Who recorded this payment
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
    PledgePaymentRequest:
      type: object
      description: Serializer for pledge payment records
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        payment_date:
          type: string
          format: date
          description: Date when payment was received
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        reference_number:
          type: string
          description: Check number, transaction ID, etc.
          maxLength: 100
        notes:
          type: string
          description: Additional notes about the payment
        recorded_by:
          type: string
          description: Who recorded this payment
          maxLength: 100
      required:
      - amount
    PledgeReminder:
      type: object
      description: Serializer for pledge reminder records
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reminder_type:
          $ref: '#/components/schemas/PledgeReminderReminderTypeEnum'
        reminder_method:
          $ref: '#/components/schemas/PledgeReminderReminderMethodEnum'
        sent_date:
          type: string
          format: date-time
        message:
          type: string
          description: Content of the reminder sent
        sent_by:
          type: string
          description: Who sent the reminder
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - message
      - reminder_method
      - reminder_type
      - sent_by
    PledgeReminderReminderMethodEnum:
      enum:
      - email
      - sms
      - phone
      - mail
      type: string
      description: |-
        * `email` - Email
        * `sms` - SMS
        * `phone` - Phone Call
        * `mail` - Physical Mail
    PledgeReminderReminderTypeEnum:
      enum:
      - upcoming
      - overdue
      - thank_you
      - completion
      type: string
      description: |-
        * `upcoming` - Upcoming Payment
        * `overdue` - Overdue Payment
        * `thank_you` - Thank You
        * `completion` - Pledge Completion
    PledgeReminderRequest:
      type: object
      description: Serializer for pledge reminder records
      properties:
        reminder_type:
          $ref: '#/components/schemas/PledgeReminderReminderTypeEnum'
        reminder_method:
          $ref: '#/components/schemas/PledgeReminderReminderMethodEnum'
        sent_date:
          type: string
          format: date-time
        message:
          type: string
          minLength: 1
          description: Content of the reminder sent
        sent_by:
          type: string
          minLength: 1
          description: Who sent the reminder
          maxLength: 100
      required:
      - message
      - reminder_method
      - reminder_type
      - sent_by
    PreferredContactMethodEnum:
      enum:
      - email
      - phone
      - sms
      - whatsapp
      - mail
      type: string
      description: |-
        * `email` - Email
        * `phone` - Phone Call
        * `sms` - SMS/Text Message
        * `whatsapp` - WhatsApp
        * `mail` - Physical Mail
    PreferredLanguageEnum:
      enum:
      - english
      - twi
      - ga
      - ewe
      - dagbani
      - french
      - other
      type: string
      description: |-
        * `english` - English
        * `twi` - Twi
        * `ga` - Ga
        * `ewe` - Ewe
        * `dagbani` - Dagbani
        * `french` - French
        * `other` - Other
    RegistrationSourceEnum:
      enum:
      - public_form
      - admin_portal
      - bulk_import
      - referral
      - event_registration
      - migration
      - manual
      type: string
      description: |-
        * `public_form` - Public Registration Form
        * `admin_portal` - Admin Portal
        * `bulk_import` - Bulk Import
        * `referral` - Member Referral
        * `event_registration` - Event Registration
        * `migration` - Data Migration
        * `manual` - Manual Entry
    RelationshipTypeEnum:
      enum:
      - head
      - spouse
      - child
      - dependent
      - other
      type: string
      description: |-
        * `head` - Head of Household
        * `spouse` - Spouse
        * `child` - Child
        * `dependent` - Dependent
        * `other` - Other
    Report:
      type: object
      description: Serializer for Report model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        report_type_display:
          type: string
          readOnly: true
        format:
          $ref: '#/components/schemas/FormatEnum'
        format_display:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
          description: Unique identifier for the user
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_scheduled:
          type: boolean
        frequency:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReportFrequencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        frequency_display:
          type: string
          readOnly: true
        next_run:
          type: string
          format: date-time
          nullable: true
        last_run:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        filters: {}
        columns: {}
        email_recipients: {}
        email_subject:
          type: string
          maxLength: 200
        email_body:
          type: string
        is_active:
          type: boolean
        total_runs:
          type: string
          readOnly: true
        successful_runs:
          type: string
          readOnly: true
        last_successful_run:
          type: string
          readOnly: true
      required:
      - name
      - report_type
    ReportFrequencyEnum:
      enum:
      - daily
      - weekly
      - monthly
      - quarterly
      - annually
      type: string
      description: |-
        * `daily` - Daily
        * `weekly` - Weekly
        * `monthly` - Monthly
        * `quarterly` - Quarterly
        * `annually` - Annually
    ReportRequest:
      type: object
      description: Serializer for Report model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        format:
          $ref: '#/components/schemas/FormatEnum'
        is_scheduled:
          type: boolean
        frequency:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReportFrequencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        next_run:
          type: string
          format: date-time
          nullable: true
        filters: {}
        columns: {}
        email_recipients: {}
        email_subject:
          type: string
          maxLength: 200
        email_body:
          type: string
        is_active:
          type: boolean
      required:
      - name
      - report_type
    ReportRun:
      type: object
      description: Serializer for ReportRun model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        report:
          type: string
          format: uuid
          nullable: true
        report_name:
          type: string
          readOnly: true
        report_type:
          type: string
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        execution_time:
          type: string
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/ReportRunStatusEnum'
        status_display:
          type: string
          readOnly: true
        file_path:
          type: string
          readOnly: true
        file_size:
          type: integer
          readOnly: true
          nullable: true
        file_size_mb:
          type: string
          readOnly: true
        file_size_display:
          type: string
          readOnly: true
        record_count:
          type: integer
          readOnly: true
          nullable: true
        error_message:
          type: string
          readOnly: true
        triggered_by:
          type: string
          format: uuid
          description: Unique identifier for the user
          nullable: true
        triggered_by_name:
          type: string
          readOnly: true
        download_url:
          type: string
          readOnly: true
        duration_display:
          type: string
          readOnly: true
    ReportRunStatusEnum:
      enum:
      - pending
      - running
      - completed
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `running` - Running
        * `completed` - Completed
        * `failed` - Failed
        * `cancelled` - Cancelled
    ReportTemplate:
      type: object
      description: Serializer for ReportTemplate model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        report_type_display:
          type: string
          readOnly: true
        default_filters: {}
        default_columns: {}
        default_format:
          $ref: '#/components/schemas/DefaultFormatEnum'
        default_format_display:
          type: string
          readOnly: true
        created_by:
          type: string
          format: uuid
          description: Unique identifier for the user
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_system_template:
          type: boolean
        is_active:
          type: boolean
        usage_count:
          type: integer
          readOnly: true
        last_used:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - name
      - report_type
    ReportTemplateRequest:
      type: object
      description: Serializer for ReportTemplate model
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        default_filters: {}
        default_columns: {}
        default_format:
          $ref: '#/components/schemas/DefaultFormatEnum'
        is_system_template:
          type: boolean
        is_active:
          type: boolean
      required:
      - name
      - report_type
    ReportTypeEnum:
      enum:
      - members
      - pledges
      - groups
      - families
      - statistics
      type: string
      description: |-
        * `members` - Members Report
        * `pledges` - Pledges Report
        * `groups` - Groups Report
        * `families` - Families Report
        * `statistics` - Statistics Report
    Role85eEnum:
      enum:
      - super_admin
      - admin
      - readonly
      type: string
      description: |-
        * `super_admin` - Super Administrator
        * `admin` - Administrator
        * `readonly` - Read Only User
    Status943Enum:
      enum:
      - active
      - completed
      - cancelled
      - paused
      type: string
      description: |-
        * `active` - Active
        * `completed` - Completed
        * `cancelled` - Cancelled
        * `paused` - Paused
    StatusEd5Enum:
      enum:
      - draft
      - published
      - cancelled
      - completed
      - postponed
      type: string
      description: |-
        * `draft` - Draft
        * `published` - Published
        * `cancelled` - Cancelled
        * `completed` - Completed
        * `postponed` - Postponed
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    UserProfile:
      type: object
      description: Enhanced user profile serializer for self-service profile updates
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the user
        username:
          type: string
          readOnly: true
          description: Unique username (3-30 characters, alphanumeric, underscore,
            hyphen only)
        email:
          type: string
          format: email
          description: User's email address (used for login)
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        last_name:
          type: string
          description: User's last name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        full_name:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/Role85eEnum'
          readOnly: true
          description: |-
            User's role determining access permissions

            * `super_admin` - Super Administrator
            * `admin` - Administrator
            * `readonly` - Read Only User
        role_display:
          type: string
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was last updated
        account_stats:
          type: string
          readOnly: true
        permissions_summary:
          type: string
          readOnly: true
      required:
      - email
    UserProfileRequest:
      type: object
      description: Enhanced user profile serializer for self-service profile updates
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: User's email address (used for login)
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
        last_name:
          type: string
          description: User's last name
          pattern: ^[a-zA-Z\s'-]+$
          maxLength: 30
      required:
      - email
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
