# Generated by Django 5.2.1 on 2025-09-12 20:08

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Descriptive name for this API key', max_length=100)),
                ('key', models.CharField(db_index=True, max_length=64, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('can_read', models.BooleanField(default=True)),
                ('can_write', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('allowed_models', models.JSONField(blank=True, default=list, help_text='List of models this key can access (empty = all models)')),
                ('allowed_ips', models.JSONField(blank=True, default=list, help_text='List of IP addresses allowed to use this key (empty = any IP)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=1000, help_text='Maximum requests per hour (0 = unlimited)')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this key expires (leave blank for no expiration)', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['key'], name='core_apikey_key_8b1d45_idx'), models.Index(fields=['is_active'], name='core_apikey_is_acti_697a96_idx'), models.Index(fields=['expires_at'], name='core_apikey_expires_1844aa_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('export', 'Export'), ('import', 'Import'), ('view', 'View'), ('permission_change', 'Permission Change'), ('system_change', 'System Change')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('app_label', models.CharField(blank=True, max_length=100)),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('object_repr', models.CharField(blank=True, max_length=255)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='core_auditl_user_id_7b678c_idx'), models.Index(fields=['model_name', 'timestamp'], name='core_auditl_model_n_078933_idx'), models.Index(fields=['action', 'timestamp'], name='core_auditl_action_096de0_idx'), models.Index(fields=['app_label', 'model_name'], name='core_auditl_app_lab_2f0dea_idx'), models.Index(fields=['object_id'], name='core_auditl_object__f4af4b_idx'), models.Index(fields=['timestamp'], name='core_auditl_timesta_80074f_idx'), models.Index(fields=['ip_address', 'timestamp'], name='core_auditl_ip_addr_1259d0_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataExportTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=100)),
                ('export_format', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('pdf', 'PDF')], max_length=20)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('fields', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percent', models.PositiveIntegerField(default=0)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('processed_records', models.PositiveIntegerField(default=0)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(help_text='When the exported file expires and gets deleted')),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='core_dataex_user_id_9e22d8_idx'), models.Index(fields=['status'], name='core_dataex_status_34af52_idx'), models.Index(fields=['expires_at'], name='core_dataex_expires_d91858_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField(max_length=1000)),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('system', 'System Announcement')], default='info', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('action_url', models.URLField(blank=True, help_text='Optional action link')),
                ('action_text', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this notification expires', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read'], name='core_notifi_recipie_aeffaf_idx'), models.Index(fields=['notification_type'], name='core_notifi_notific_cbfe88_idx'), models.Index(fields=['priority'], name='core_notifi_priorit_8208cb_idx'), models.Index(fields=['created_at'], name='core_notifi_created_d0c445_idx'), models.Index(fields=['expires_at'], name='core_notifi_expires_084cc5_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Setting key must be uppercase letters and underscores only', regex='^[A-Z_]+$')])),
                ('value', models.TextField()),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('email', 'Email'), ('url', 'URL')], default='string', max_length=20)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('is_sensitive', models.BooleanField(default=False, help_text='Mark as sensitive to hide value in admin interface')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['key'],
                'indexes': [models.Index(fields=['key'], name='core_system_key_8c8cde_idx'), models.Index(fields=['setting_type'], name='core_system_setting_362fb3_idx'), models.Index(fields=['updated_at'], name='core_system_updated_a9d3b2_idx')],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Tag name can only contain letters, numbers, spaces, hyphens, and underscores', regex='^[a-zA-Z0-9\\s\\-_]+$')])),
                ('color', models.CharField(default='#007bff', help_text='Hex color code (e.g., #007bff)', max_length=7, validators=[django.core.validators.RegexValidator(message='Color must be a valid hex color code', regex='^#[0-9A-Fa-f]{6}$')])),
                ('description', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times this tag is used')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='core_tag_name_102daa_idx'), models.Index(fields=['is_active'], name='core_tag_is_acti_88f584_idx'), models.Index(fields=['created_at'], name='core_tag_created_ed2b1a_idx')],
            },
        ),
    ]
