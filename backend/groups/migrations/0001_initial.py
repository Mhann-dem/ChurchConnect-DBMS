# Generated by Django 5.2.1 on 2025-09-12 20:08

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the group or ministry', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('description', models.TextField(blank=True, help_text="Detailed description of the group's purpose and activities", null=True)),
                ('leader_name', models.CharField(blank=True, help_text='Name of the group leader', max_length=255, null=True)),
                ('meeting_schedule', models.CharField(blank=True, help_text='When and where the group meets', max_length=500, null=True)),
                ('meeting_location', models.CharField(blank=True, help_text='Physical or virtual meeting location', max_length=255, null=True)),
                ('contact_email', models.EmailField(blank=True, help_text='Contact email for the group', max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, help_text='Contact phone number for the group', max_length=20, null=True)),
                ('max_capacity', models.PositiveIntegerField(blank=True, help_text='Maximum number of members (leave blank for unlimited)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the group is currently active')),
                ('is_public', models.BooleanField(default=True, help_text='Whether the group is visible to members for joining')),
                ('requires_approval', models.BooleanField(default=False, help_text='Whether new members need approval to join')),
                ('age_restriction', models.CharField(blank=True, help_text="Age restrictions for the group (e.g., 'Adults only', 'Youth 13-18')", max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leader', models.ForeignKey(blank=True, help_text='Group leader from member database', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_groups', to='members.member')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for category display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Group Categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='groups_grou_name_ff975c_idx'), models.Index(fields=['is_active'], name='groups_grou_is_acti_4ffe8b_idx')],
            },
        ),
        migrations.CreateModel(
            name='GroupCategoryRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='groups.groupcategory')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='groups.group')),
            ],
            options={
                'verbose_name': 'Group Category',
                'verbose_name_plural': 'Group Categories',
            },
        ),
        migrations.CreateModel(
            name='MemberGroupRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('member', 'Member'), ('leader', 'Leader'), ('co_leader', 'Co-Leader'), ('assistant', 'Assistant')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending Approval'), ('declined', 'Declined')], default='active', max_length=20)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, help_text='When the member officially started in this role', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When the member left or role ended', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this membership is currently active')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this membership', null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='groups.group')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to='members.member')),
            ],
            options={
                'verbose_name': 'Group Membership',
                'verbose_name_plural': 'Group Memberships',
                'ordering': ['-join_date'],
            },
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['name'], name='groups_grou_name_0806de_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['is_active'], name='groups_grou_is_acti_044fa7_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['is_public'], name='groups_grou_is_publ_f37341_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['created_at'], name='groups_grou_created_b17bf8_idx'),
        ),
        migrations.AddIndex(
            model_name='groupcategoryrelationship',
            index=models.Index(fields=['group', 'category'], name='groups_grou_group_i_100cdc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupcategoryrelationship',
            unique_together={('group', 'category')},
        ),
        migrations.AddIndex(
            model_name='membergrouprelationship',
            index=models.Index(fields=['member', 'group'], name='groups_memb_member__6a83fa_idx'),
        ),
        migrations.AddIndex(
            model_name='membergrouprelationship',
            index=models.Index(fields=['status'], name='groups_memb_status_07c8fe_idx'),
        ),
        migrations.AddIndex(
            model_name='membergrouprelationship',
            index=models.Index(fields=['is_active'], name='groups_memb_is_acti_af3ed5_idx'),
        ),
        migrations.AddIndex(
            model_name='membergrouprelationship',
            index=models.Index(fields=['join_date'], name='groups_memb_join_da_ed43e2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='membergrouprelationship',
            unique_together={('member', 'group')},
        ),
    ]
