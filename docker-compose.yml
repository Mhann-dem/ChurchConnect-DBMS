# docker-compose.yml with HTTPS support

version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"   # HTTP
      - "8443:8443"   # HTTPS
    volumes:
      - ./backend:/app
      - ./ssl:/app/ssl  # Mount SSL certificates
    environment:
      - DEBUG=true
      - USE_HTTPS=${USE_HTTPS:-false}
      - SSL_CERT_PATH=/app/ssl/cert.pem
      - SSL_KEY_PATH=/app/ssl/key.pem
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        if [ \"$$USE_HTTPS\" = \"true\" ]; then
          echo 'Starting with HTTPS support...'
          python manage.py runserver_flexible --https 0.0.0.0:8443
        else
          echo 'Starting with HTTP only...'
          python manage.py runserver 0.0.0.0:8000
        fi
      "

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"   # HTTP
      - "3443:3443"   # HTTPS
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./ssl:/app/ssl  # Mount SSL certificates for frontend
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - HTTPS=${FRONTEND_HTTPS:-false}
      - SSL_CRT_FILE=/app/ssl/cert.pem
      - SSL_KEY_FILE=/app/ssl/key.pem
    depends_on:
      - backend

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME:-churchconnect_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  nginx:  # Production-ready reverse proxy
    image: nginx:alpine
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL certificates for Nginx
    depends_on:
      - backend
      - frontend
    profiles:
      - production  # Only run in production profile

volumes:
  postgres_data:

# Usage:
# HTTP only: docker-compose up
# HTTPS development: USE_HTTPS=true docker-compose up
# Production with Nginx: docker-compose --profile production up